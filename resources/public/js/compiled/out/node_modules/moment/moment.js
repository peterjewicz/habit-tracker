goog.provide("module$Applications$server$habit_tracker$node_modules$moment$moment");
var module$Applications$server$habit_tracker$node_modules$moment$moment={};var hookCallback$$module$Applications$server$habit_tracker$node_modules$moment$moment;function hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment(){return hookCallback$$module$Applications$server$habit_tracker$node_modules$moment$moment.apply(null,arguments)}
function setHookCallback$$module$Applications$server$habit_tracker$node_modules$moment$moment(callback){hookCallback$$module$Applications$server$habit_tracker$node_modules$moment$moment=callback}function isArray$$module$Applications$server$habit_tracker$node_modules$moment$moment(input){return input instanceof Array||Object.prototype.toString.call(input)==="[object Array]"}
function isObject$$module$Applications$server$habit_tracker$node_modules$moment$moment(input){return input!=null&&Object.prototype.toString.call(input)==="[object Object]"}function isObjectEmpty$$module$Applications$server$habit_tracker$node_modules$moment$moment(obj){if(Object.getOwnPropertyNames)return Object.getOwnPropertyNames(obj).length===0;else{var k;for(k in obj)if(obj.hasOwnProperty(k))return false;return true}}
function isUndefined$$module$Applications$server$habit_tracker$node_modules$moment$moment(input){return input===void 0}function isNumber$$module$Applications$server$habit_tracker$node_modules$moment$moment(input){return typeof input==="number"||Object.prototype.toString.call(input)==="[object Number]"}function isDate$$module$Applications$server$habit_tracker$node_modules$moment$moment(input){return input instanceof Date||Object.prototype.toString.call(input)==="[object Date]"}
function map$$module$Applications$server$habit_tracker$node_modules$moment$moment(arr,fn){var res=[];var i;for(i=0;i<arr.length;++i)res.push(fn(arr[i],i));return res}function hasOwnProp$$module$Applications$server$habit_tracker$node_modules$moment$moment(a,b){return Object.prototype.hasOwnProperty.call(a,b)}
function extend$$module$Applications$server$habit_tracker$node_modules$moment$moment(a,b){for(var i in b)if(hasOwnProp$$module$Applications$server$habit_tracker$node_modules$moment$moment(b,i))a[i]=b[i];if(hasOwnProp$$module$Applications$server$habit_tracker$node_modules$moment$moment(b,"toString"))a.toString=b.toString;if(hasOwnProp$$module$Applications$server$habit_tracker$node_modules$moment$moment(b,"valueOf"))a.valueOf=b.valueOf;return a}
function createUTC$$module$Applications$server$habit_tracker$node_modules$moment$moment(input,format,locale,strict){return createLocalOrUTC$$module$Applications$server$habit_tracker$node_modules$moment$moment(input,format,locale,strict,true).utc()}
function defaultParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(){return{empty:false,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:false,invalidMonth:null,invalidFormat:false,userInvalidated:false,iso:false,parsedDateParts:[],meridiem:null,rfc2822:false,weekdayMismatch:false}}
function getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(m){if(m._pf==null)m._pf=defaultParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment();return m._pf}var some$$module$Applications$server$habit_tracker$node_modules$moment$moment;
if(Array.prototype.some)some$$module$Applications$server$habit_tracker$node_modules$moment$moment=Array.prototype.some;else some$$module$Applications$server$habit_tracker$node_modules$moment$moment=function(fun){var t=Object(this);var len=t.length>>>0;for(var i=0;i<len;i++)if(i in t&&fun.call(this,t[i],i,t))return true;return false};
function isValid$$module$Applications$server$habit_tracker$node_modules$moment$moment(m){if(m._isValid==null){var flags=getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(m);var parsedParts=some$$module$Applications$server$habit_tracker$node_modules$moment$moment.call(flags.parsedDateParts,function(i){return i!=null});var isNowValid=!isNaN(m._d.getTime())&&flags.overflow<0&&!flags.empty&&!flags.invalidMonth&&!flags.invalidWeekday&&!flags.weekdayMismatch&&!flags.nullInput&&
!flags.invalidFormat&&!flags.userInvalidated&&(!flags.meridiem||flags.meridiem&&parsedParts);if(m._strict)isNowValid=isNowValid&&flags.charsLeftOver===0&&flags.unusedTokens.length===0&&flags.bigHour===undefined;if(Object.isFrozen==null||!Object.isFrozen(m))m._isValid=isNowValid;else return isNowValid}return m._isValid}
function createInvalid$$module$Applications$server$habit_tracker$node_modules$moment$moment(flags){var m=createUTC$$module$Applications$server$habit_tracker$node_modules$moment$moment(NaN);if(flags!=null)extend$$module$Applications$server$habit_tracker$node_modules$moment$moment(getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(m),flags);else getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(m).userInvalidated=true;return m}
var momentProperties$$module$Applications$server$habit_tracker$node_modules$moment$moment=hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.momentProperties=[];
function copyConfig$$module$Applications$server$habit_tracker$node_modules$moment$moment(to,from){var i;var prop;var val;if(!isUndefined$$module$Applications$server$habit_tracker$node_modules$moment$moment(from._isAMomentObject))to._isAMomentObject=from._isAMomentObject;if(!isUndefined$$module$Applications$server$habit_tracker$node_modules$moment$moment(from._i))to._i=from._i;if(!isUndefined$$module$Applications$server$habit_tracker$node_modules$moment$moment(from._f))to._f=from._f;if(!isUndefined$$module$Applications$server$habit_tracker$node_modules$moment$moment(from._l))to._l=
from._l;if(!isUndefined$$module$Applications$server$habit_tracker$node_modules$moment$moment(from._strict))to._strict=from._strict;if(!isUndefined$$module$Applications$server$habit_tracker$node_modules$moment$moment(from._tzm))to._tzm=from._tzm;if(!isUndefined$$module$Applications$server$habit_tracker$node_modules$moment$moment(from._isUTC))to._isUTC=from._isUTC;if(!isUndefined$$module$Applications$server$habit_tracker$node_modules$moment$moment(from._offset))to._offset=from._offset;if(!isUndefined$$module$Applications$server$habit_tracker$node_modules$moment$moment(from._pf))to._pf=
getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(from);if(!isUndefined$$module$Applications$server$habit_tracker$node_modules$moment$moment(from._locale))to._locale=from._locale;if(momentProperties$$module$Applications$server$habit_tracker$node_modules$moment$moment.length>0)for(i=0;i<momentProperties$$module$Applications$server$habit_tracker$node_modules$moment$moment.length;i++){prop=momentProperties$$module$Applications$server$habit_tracker$node_modules$moment$moment[i];
val=from[prop];if(!isUndefined$$module$Applications$server$habit_tracker$node_modules$moment$moment(val))to[prop]=val}return to}var updateInProgress$$module$Applications$server$habit_tracker$node_modules$moment$moment=false;
function Moment$$module$Applications$server$habit_tracker$node_modules$moment$moment(config){copyConfig$$module$Applications$server$habit_tracker$node_modules$moment$moment(this,config);this._d=new Date(config._d!=null?config._d.getTime():NaN);if(!this.isValid())this._d=new Date(NaN);if(updateInProgress$$module$Applications$server$habit_tracker$node_modules$moment$moment===false){updateInProgress$$module$Applications$server$habit_tracker$node_modules$moment$moment=true;hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.updateOffset(this);
updateInProgress$$module$Applications$server$habit_tracker$node_modules$moment$moment=false}}function isMoment$$module$Applications$server$habit_tracker$node_modules$moment$moment(obj){return obj instanceof Moment$$module$Applications$server$habit_tracker$node_modules$moment$moment||obj!=null&&obj._isAMomentObject!=null}function absFloor$$module$Applications$server$habit_tracker$node_modules$moment$moment(number){if(number<0)return Math.ceil(number)||0;else return Math.floor(number)}
function toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(argumentForCoercion){var coercedNumber=+argumentForCoercion;var value=0;if(coercedNumber!==0&&isFinite(coercedNumber))value=absFloor$$module$Applications$server$habit_tracker$node_modules$moment$moment(coercedNumber);return value}
function compareArrays$$module$Applications$server$habit_tracker$node_modules$moment$moment(array1,array2,dontConvert){var len=Math.min(array1.length,array2.length);var lengthDiff=Math.abs(array1.length-array2.length);var diffs=0;var i;for(i=0;i<len;i++)if(dontConvert&&array1[i]!==array2[i]||!dontConvert&&toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(array1[i])!==toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(array2[i]))diffs++;return diffs+
lengthDiff}function warn$$module$Applications$server$habit_tracker$node_modules$moment$moment(msg){if(hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.suppressDeprecationWarnings===false&&typeof console!=="undefined"&&console.warn)console.warn("Deprecation warning: "+msg)}
function deprecate$$module$Applications$server$habit_tracker$node_modules$moment$moment(msg,fn){var firstTime=true;return extend$$module$Applications$server$habit_tracker$node_modules$moment$moment(function(){if(hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.deprecationHandler!=null)hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.deprecationHandler(null,msg);if(firstTime){var args=[];var arg;for(var i=0;i<arguments.length;i++){arg="";if(typeof arguments[i]===
"object"){arg+="\n["+i+"] ";for(var key in arguments[0])arg+=key+": "+arguments[0][key]+", ";arg=arg.slice(0,-2)}else arg=arguments[i];args.push(arg)}warn$$module$Applications$server$habit_tracker$node_modules$moment$moment(msg+"\nArguments: "+Array.prototype.slice.call(args).join("")+"\n"+(new Error).stack);firstTime=false}return fn.apply(this,arguments)},fn)}var deprecations$$module$Applications$server$habit_tracker$node_modules$moment$moment={};
function deprecateSimple$$module$Applications$server$habit_tracker$node_modules$moment$moment(name,msg){if(hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.deprecationHandler!=null)hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.deprecationHandler(name,msg);if(!deprecations$$module$Applications$server$habit_tracker$node_modules$moment$moment[name]){warn$$module$Applications$server$habit_tracker$node_modules$moment$moment(msg);deprecations$$module$Applications$server$habit_tracker$node_modules$moment$moment[name]=
true}}hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.suppressDeprecationWarnings=false;hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.deprecationHandler=null;function isFunction$$module$Applications$server$habit_tracker$node_modules$moment$moment(input){return input instanceof Function||Object.prototype.toString.call(input)==="[object Function]"}
function set$$module$Applications$server$habit_tracker$node_modules$moment$moment(config){var prop;var i;for(i in config){prop=config[i];if(isFunction$$module$Applications$server$habit_tracker$node_modules$moment$moment(prop))this[i]=prop;else this["_"+i]=prop}this._config=config;this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+"|"+/\d{1,2}/.source)}
function mergeConfigs$$module$Applications$server$habit_tracker$node_modules$moment$moment(parentConfig,childConfig){var res=extend$$module$Applications$server$habit_tracker$node_modules$moment$moment({},parentConfig);var prop;for(prop in childConfig)if(hasOwnProp$$module$Applications$server$habit_tracker$node_modules$moment$moment(childConfig,prop))if(isObject$$module$Applications$server$habit_tracker$node_modules$moment$moment(parentConfig[prop])&&isObject$$module$Applications$server$habit_tracker$node_modules$moment$moment(childConfig[prop])){res[prop]=
{};extend$$module$Applications$server$habit_tracker$node_modules$moment$moment(res[prop],parentConfig[prop]);extend$$module$Applications$server$habit_tracker$node_modules$moment$moment(res[prop],childConfig[prop])}else if(childConfig[prop]!=null)res[prop]=childConfig[prop];else delete res[prop];for(prop in parentConfig)if(hasOwnProp$$module$Applications$server$habit_tracker$node_modules$moment$moment(parentConfig,prop)&&!hasOwnProp$$module$Applications$server$habit_tracker$node_modules$moment$moment(childConfig,
prop)&&isObject$$module$Applications$server$habit_tracker$node_modules$moment$moment(parentConfig[prop]))res[prop]=extend$$module$Applications$server$habit_tracker$node_modules$moment$moment({},res[prop]);return res}function Locale$$module$Applications$server$habit_tracker$node_modules$moment$moment(config){if(config!=null)this.set(config)}var keys$$module$Applications$server$habit_tracker$node_modules$moment$moment;
if(Object.keys)keys$$module$Applications$server$habit_tracker$node_modules$moment$moment=Object.keys;else keys$$module$Applications$server$habit_tracker$node_modules$moment$moment=function(obj){var i;var res=[];for(i in obj)if(hasOwnProp$$module$Applications$server$habit_tracker$node_modules$moment$moment(obj,i))res.push(i);return res};
var defaultCalendar$$module$Applications$server$habit_tracker$node_modules$moment$moment={sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"};
function calendar$$module$Applications$server$habit_tracker$node_modules$moment$moment(key,mom,now){var output=this._calendar[key]||this._calendar["sameElse"];return isFunction$$module$Applications$server$habit_tracker$node_modules$moment$moment(output)?output.call(mom,now):output}var defaultLongDateFormat$$module$Applications$server$habit_tracker$node_modules$moment$moment={LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"};
function longDateFormat$$module$Applications$server$habit_tracker$node_modules$moment$moment(key){var format=this._longDateFormat[key];var formatUpper=this._longDateFormat[key.toUpperCase()];if(format||!formatUpper)return format;this._longDateFormat[key]=formatUpper.replace(/MMMM|MM|DD|dddd/g,function(val){return val.slice(1)});return this._longDateFormat[key]}var defaultInvalidDate$$module$Applications$server$habit_tracker$node_modules$moment$moment="Invalid date";
function invalidDate$$module$Applications$server$habit_tracker$node_modules$moment$moment(){return this._invalidDate}var defaultOrdinal$$module$Applications$server$habit_tracker$node_modules$moment$moment="%d";var defaultDayOfMonthOrdinalParse$$module$Applications$server$habit_tracker$node_modules$moment$moment=/\d{1,2}/;function ordinal$$module$Applications$server$habit_tracker$node_modules$moment$moment(number){return this._ordinal.replace("%d",number)}
var defaultRelativeTime$$module$Applications$server$habit_tracker$node_modules$moment$moment={future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"};
function relativeTime$$module$Applications$server$habit_tracker$node_modules$moment$moment(number,withoutSuffix,string,isFuture){var output=this._relativeTime[string];return isFunction$$module$Applications$server$habit_tracker$node_modules$moment$moment(output)?output(number,withoutSuffix,string,isFuture):output.replace(/%d/i,number)}
function pastFuture$$module$Applications$server$habit_tracker$node_modules$moment$moment(diff,output){var format=this._relativeTime[diff>0?"future":"past"];return isFunction$$module$Applications$server$habit_tracker$node_modules$moment$moment(format)?format(output):format.replace(/%s/i,output)}var aliases$$module$Applications$server$habit_tracker$node_modules$moment$moment={};
function addUnitAlias$$module$Applications$server$habit_tracker$node_modules$moment$moment(unit,shorthand){var lowerCase=unit.toLowerCase();aliases$$module$Applications$server$habit_tracker$node_modules$moment$moment[lowerCase]=aliases$$module$Applications$server$habit_tracker$node_modules$moment$moment[lowerCase+"s"]=aliases$$module$Applications$server$habit_tracker$node_modules$moment$moment[shorthand]=unit}
function normalizeUnits$$module$Applications$server$habit_tracker$node_modules$moment$moment(units){return typeof units==="string"?aliases$$module$Applications$server$habit_tracker$node_modules$moment$moment[units]||aliases$$module$Applications$server$habit_tracker$node_modules$moment$moment[units.toLowerCase()]:undefined}
function normalizeObjectUnits$$module$Applications$server$habit_tracker$node_modules$moment$moment(inputObject){var normalizedInput={};var normalizedProp;var prop;for(prop in inputObject)if(hasOwnProp$$module$Applications$server$habit_tracker$node_modules$moment$moment(inputObject,prop)){normalizedProp=normalizeUnits$$module$Applications$server$habit_tracker$node_modules$moment$moment(prop);if(normalizedProp)normalizedInput[normalizedProp]=inputObject[prop]}return normalizedInput}
var priorities$$module$Applications$server$habit_tracker$node_modules$moment$moment={};function addUnitPriority$$module$Applications$server$habit_tracker$node_modules$moment$moment(unit,priority){priorities$$module$Applications$server$habit_tracker$node_modules$moment$moment[unit]=priority}
function getPrioritizedUnits$$module$Applications$server$habit_tracker$node_modules$moment$moment(unitsObj){var units=[];for(var u in unitsObj)units.push({unit:u,priority:priorities$$module$Applications$server$habit_tracker$node_modules$moment$moment[u]});units.sort(function(a,b){return a.priority-b.priority});return units}
function zeroFill$$module$Applications$server$habit_tracker$node_modules$moment$moment(number,targetLength,forceSign){var absNumber=""+Math.abs(number);var zerosToFill=targetLength-absNumber.length;var sign=number>=0;return(sign?forceSign?"+":"":"-")+Math.pow(10,Math.max(0,zerosToFill)).toString().substr(1)+absNumber}var formattingTokens$$module$Applications$server$habit_tracker$node_modules$moment$moment=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;
var localFormattingTokens$$module$Applications$server$habit_tracker$node_modules$moment$moment=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;var formatFunctions$$module$Applications$server$habit_tracker$node_modules$moment$moment={};var formatTokenFunctions$$module$Applications$server$habit_tracker$node_modules$moment$moment={};
function addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(token,padded,ordinal,callback){var func=callback;if(typeof callback==="string")func=function(){return this[callback]()};if(token)formatTokenFunctions$$module$Applications$server$habit_tracker$node_modules$moment$moment[token]=func;if(padded)formatTokenFunctions$$module$Applications$server$habit_tracker$node_modules$moment$moment[padded[0]]=function(){return zeroFill$$module$Applications$server$habit_tracker$node_modules$moment$moment(func.apply(this,
arguments),padded[1],padded[2])};if(ordinal)formatTokenFunctions$$module$Applications$server$habit_tracker$node_modules$moment$moment[ordinal]=function(){return this.localeData().ordinal(func.apply(this,arguments),token)}}function removeFormattingTokens$$module$Applications$server$habit_tracker$node_modules$moment$moment(input){if(input.match(/\[[\s\S]/))return input.replace(/^\[|\]$/g,"");return input.replace(/\\/g,"")}
function makeFormatFunction$$module$Applications$server$habit_tracker$node_modules$moment$moment(format){var array=format.match(formattingTokens$$module$Applications$server$habit_tracker$node_modules$moment$moment);var i;var length;for(i=0,length=array.length;i<length;i++)if(formatTokenFunctions$$module$Applications$server$habit_tracker$node_modules$moment$moment[array[i]])array[i]=formatTokenFunctions$$module$Applications$server$habit_tracker$node_modules$moment$moment[array[i]];else array[i]=removeFormattingTokens$$module$Applications$server$habit_tracker$node_modules$moment$moment(array[i]);
return function(mom){var output="";var i;for(i=0;i<length;i++)output+=isFunction$$module$Applications$server$habit_tracker$node_modules$moment$moment(array[i])?array[i].call(mom,format):array[i];return output}}
function formatMoment$$module$Applications$server$habit_tracker$node_modules$moment$moment(m,format){if(!m.isValid())return m.localeData().invalidDate();format=expandFormat$$module$Applications$server$habit_tracker$node_modules$moment$moment(format,m.localeData());formatFunctions$$module$Applications$server$habit_tracker$node_modules$moment$moment[format]=formatFunctions$$module$Applications$server$habit_tracker$node_modules$moment$moment[format]||makeFormatFunction$$module$Applications$server$habit_tracker$node_modules$moment$moment(format);
return formatFunctions$$module$Applications$server$habit_tracker$node_modules$moment$moment[format](m)}
function expandFormat$$module$Applications$server$habit_tracker$node_modules$moment$moment(format,locale){var i=5;function replaceLongDateFormatTokens(input){return locale.longDateFormat(input)||input}localFormattingTokens$$module$Applications$server$habit_tracker$node_modules$moment$moment.lastIndex=0;while(i>=0&&localFormattingTokens$$module$Applications$server$habit_tracker$node_modules$moment$moment.test(format)){format=format.replace(localFormattingTokens$$module$Applications$server$habit_tracker$node_modules$moment$moment,
replaceLongDateFormatTokens);localFormattingTokens$$module$Applications$server$habit_tracker$node_modules$moment$moment.lastIndex=0;i-=1}return format}var match1$$module$Applications$server$habit_tracker$node_modules$moment$moment=/\d/;var match2$$module$Applications$server$habit_tracker$node_modules$moment$moment=/\d\d/;var match3$$module$Applications$server$habit_tracker$node_modules$moment$moment=/\d{3}/;var match4$$module$Applications$server$habit_tracker$node_modules$moment$moment=/\d{4}/;
var match6$$module$Applications$server$habit_tracker$node_modules$moment$moment=/[+-]?\d{6}/;var match1to2$$module$Applications$server$habit_tracker$node_modules$moment$moment=/\d\d?/;var match3to4$$module$Applications$server$habit_tracker$node_modules$moment$moment=/\d\d\d\d?/;var match5to6$$module$Applications$server$habit_tracker$node_modules$moment$moment=/\d\d\d\d\d\d?/;var match1to3$$module$Applications$server$habit_tracker$node_modules$moment$moment=/\d{1,3}/;
var match1to4$$module$Applications$server$habit_tracker$node_modules$moment$moment=/\d{1,4}/;var match1to6$$module$Applications$server$habit_tracker$node_modules$moment$moment=/[+-]?\d{1,6}/;var matchUnsigned$$module$Applications$server$habit_tracker$node_modules$moment$moment=/\d+/;var matchSigned$$module$Applications$server$habit_tracker$node_modules$moment$moment=/[+-]?\d+/;var matchOffset$$module$Applications$server$habit_tracker$node_modules$moment$moment=/Z|[+-]\d\d:?\d\d/gi;
var matchShortOffset$$module$Applications$server$habit_tracker$node_modules$moment$moment=/Z|[+-]\d\d(?::?\d\d)?/gi;var matchTimestamp$$module$Applications$server$habit_tracker$node_modules$moment$moment=/[+-]?\d+(\.\d{1,3})?/;var matchWord$$module$Applications$server$habit_tracker$node_modules$moment$moment=/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;
var regexes$$module$Applications$server$habit_tracker$node_modules$moment$moment={};function addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(token,regex,strictRegex){regexes$$module$Applications$server$habit_tracker$node_modules$moment$moment[token]=isFunction$$module$Applications$server$habit_tracker$node_modules$moment$moment(regex)?regex:function(isStrict,localeData){return isStrict&&strictRegex?strictRegex:regex}}
function getParseRegexForToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(token,config){if(!hasOwnProp$$module$Applications$server$habit_tracker$node_modules$moment$moment(regexes$$module$Applications$server$habit_tracker$node_modules$moment$moment,token))return new RegExp(unescapeFormat$$module$Applications$server$habit_tracker$node_modules$moment$moment(token));return regexes$$module$Applications$server$habit_tracker$node_modules$moment$moment[token](config._strict,config._locale)}
function unescapeFormat$$module$Applications$server$habit_tracker$node_modules$moment$moment(s){return regexEscape$$module$Applications$server$habit_tracker$node_modules$moment$moment(s.replace("\\","").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(matched,p1,p2,p3,p4){return p1||p2||p3||p4}))}function regexEscape$$module$Applications$server$habit_tracker$node_modules$moment$moment(s){return s.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$\x26")}
var tokens$$module$Applications$server$habit_tracker$node_modules$moment$moment={};
function addParseToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(token,callback){var i;var func=callback;if(typeof token==="string")token=[token];if(isNumber$$module$Applications$server$habit_tracker$node_modules$moment$moment(callback))func=function(input,array){array[callback]=toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(input)};for(i=0;i<token.length;i++)tokens$$module$Applications$server$habit_tracker$node_modules$moment$moment[token[i]]=func}
function addWeekParseToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(token,callback){addParseToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(token,function(input,array,config,token){config._w=config._w||{};callback(input,config._w,config,token)})}
function addTimeToArrayFromToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(token,input,config){if(input!=null&&hasOwnProp$$module$Applications$server$habit_tracker$node_modules$moment$moment(tokens$$module$Applications$server$habit_tracker$node_modules$moment$moment,token))tokens$$module$Applications$server$habit_tracker$node_modules$moment$moment[token](input,config._a,config,token)}var YEAR$$module$Applications$server$habit_tracker$node_modules$moment$moment=0;
var MONTH$$module$Applications$server$habit_tracker$node_modules$moment$moment=1;var DATE$$module$Applications$server$habit_tracker$node_modules$moment$moment=2;var HOUR$$module$Applications$server$habit_tracker$node_modules$moment$moment=3;var MINUTE$$module$Applications$server$habit_tracker$node_modules$moment$moment=4;var SECOND$$module$Applications$server$habit_tracker$node_modules$moment$moment=5;var MILLISECOND$$module$Applications$server$habit_tracker$node_modules$moment$moment=6;
var WEEK$$module$Applications$server$habit_tracker$node_modules$moment$moment=7;var WEEKDAY$$module$Applications$server$habit_tracker$node_modules$moment$moment=8;addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("Y",0,0,function(){var y=this.year();return y<=9999?""+y:"+"+y});addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(0,["YY",2],0,function(){return this.year()%100});
addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(0,["YYYY",4],0,"year");addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(0,["YYYYY",5],0,"year");addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(0,["YYYYYY",6,true],0,"year");addUnitAlias$$module$Applications$server$habit_tracker$node_modules$moment$moment("year","y");
addUnitPriority$$module$Applications$server$habit_tracker$node_modules$moment$moment("year",1);addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("Y",matchSigned$$module$Applications$server$habit_tracker$node_modules$moment$moment);addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("YY",match1to2$$module$Applications$server$habit_tracker$node_modules$moment$moment,match2$$module$Applications$server$habit_tracker$node_modules$moment$moment);
addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("YYYY",match1to4$$module$Applications$server$habit_tracker$node_modules$moment$moment,match4$$module$Applications$server$habit_tracker$node_modules$moment$moment);addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("YYYYY",match1to6$$module$Applications$server$habit_tracker$node_modules$moment$moment,match6$$module$Applications$server$habit_tracker$node_modules$moment$moment);
addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("YYYYYY",match1to6$$module$Applications$server$habit_tracker$node_modules$moment$moment,match6$$module$Applications$server$habit_tracker$node_modules$moment$moment);addParseToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(["YYYYY","YYYYYY"],YEAR$$module$Applications$server$habit_tracker$node_modules$moment$moment);
addParseToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("YYYY",function(input,array){array[YEAR$$module$Applications$server$habit_tracker$node_modules$moment$moment]=input.length===2?hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.parseTwoDigitYear(input):toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(input)});
addParseToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("YY",function(input,array){array[YEAR$$module$Applications$server$habit_tracker$node_modules$moment$moment]=hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.parseTwoDigitYear(input)});addParseToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("Y",function(input,array){array[YEAR$$module$Applications$server$habit_tracker$node_modules$moment$moment]=parseInt(input,10)});
function daysInYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(year){return isLeapYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(year)?366:365}function isLeapYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(year){return year%4===0&&year%100!==0||year%400===0}
hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.parseTwoDigitYear=function(input){return toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(input)+(toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(input)>68?1900:2E3)};var getSetYear$$module$Applications$server$habit_tracker$node_modules$moment$moment=makeGetSet$$module$Applications$server$habit_tracker$node_modules$moment$moment("FullYear",true);
function getIsLeapYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(){return isLeapYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(this.year())}
function makeGetSet$$module$Applications$server$habit_tracker$node_modules$moment$moment(unit,keepTime){return function(value){if(value!=null){set$1$$module$Applications$server$habit_tracker$node_modules$moment$moment(this,unit,value);hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.updateOffset(this,keepTime);return this}else return get$$module$Applications$server$habit_tracker$node_modules$moment$moment(this,unit)}}
function get$$module$Applications$server$habit_tracker$node_modules$moment$moment(mom,unit){return mom.isValid()?mom._d["get"+(mom._isUTC?"UTC":"")+unit]():NaN}
function set$1$$module$Applications$server$habit_tracker$node_modules$moment$moment(mom,unit,value){if(mom.isValid()&&!isNaN(value))if(unit==="FullYear"&&isLeapYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(mom.year())&&mom.month()===1&&mom.date()===29)mom._d["set"+(mom._isUTC?"UTC":"")+unit](value,mom.month(),daysInMonth$$module$Applications$server$habit_tracker$node_modules$moment$moment(value,mom.month()));else mom._d["set"+(mom._isUTC?"UTC":"")+unit](value)}
function stringGet$$module$Applications$server$habit_tracker$node_modules$moment$moment(units){units=normalizeUnits$$module$Applications$server$habit_tracker$node_modules$moment$moment(units);if(isFunction$$module$Applications$server$habit_tracker$node_modules$moment$moment(this[units]))return this[units]();return this}
function stringSet$$module$Applications$server$habit_tracker$node_modules$moment$moment(units,value){if(typeof units==="object"){units=normalizeObjectUnits$$module$Applications$server$habit_tracker$node_modules$moment$moment(units);var prioritized=getPrioritizedUnits$$module$Applications$server$habit_tracker$node_modules$moment$moment(units);for(var i=0;i<prioritized.length;i++)this[prioritized[i].unit](units[prioritized[i].unit])}else{units=normalizeUnits$$module$Applications$server$habit_tracker$node_modules$moment$moment(units);
if(isFunction$$module$Applications$server$habit_tracker$node_modules$moment$moment(this[units]))return this[units](value)}return this}function mod$$module$Applications$server$habit_tracker$node_modules$moment$moment(n,x){return(n%x+x)%x}var indexOf$$module$Applications$server$habit_tracker$node_modules$moment$moment;
if(Array.prototype.indexOf)indexOf$$module$Applications$server$habit_tracker$node_modules$moment$moment=Array.prototype.indexOf;else indexOf$$module$Applications$server$habit_tracker$node_modules$moment$moment=function(o){var i;for(i=0;i<this.length;++i)if(this[i]===o)return i;return-1};
function daysInMonth$$module$Applications$server$habit_tracker$node_modules$moment$moment(year,month){if(isNaN(year)||isNaN(month))return NaN;var modMonth=mod$$module$Applications$server$habit_tracker$node_modules$moment$moment(month,12);year+=(month-modMonth)/12;return modMonth===1?isLeapYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(year)?29:28:31-modMonth%7%2}
addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("M",["MM",2],"Mo",function(){return this.month()+1});addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("MMM",0,0,function(format){return this.localeData().monthsShort(this,format)});addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("MMMM",0,0,function(format){return this.localeData().months(this,format)});
addUnitAlias$$module$Applications$server$habit_tracker$node_modules$moment$moment("month","M");addUnitPriority$$module$Applications$server$habit_tracker$node_modules$moment$moment("month",8);addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("M",match1to2$$module$Applications$server$habit_tracker$node_modules$moment$moment);
addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("MM",match1to2$$module$Applications$server$habit_tracker$node_modules$moment$moment,match2$$module$Applications$server$habit_tracker$node_modules$moment$moment);addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("MMM",function(isStrict,locale){return locale.monthsShortRegex(isStrict)});
addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("MMMM",function(isStrict,locale){return locale.monthsRegex(isStrict)});addParseToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(["M","MM"],function(input,array){array[MONTH$$module$Applications$server$habit_tracker$node_modules$moment$moment]=toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(input)-1});
addParseToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(["MMM","MMMM"],function(input,array,config,token){var month=config._locale.monthsParse(input,token,config._strict);if(month!=null)array[MONTH$$module$Applications$server$habit_tracker$node_modules$moment$moment]=month;else getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(config).invalidMonth=input});
var MONTHS_IN_FORMAT$$module$Applications$server$habit_tracker$node_modules$moment$moment=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;var defaultLocaleMonths$$module$Applications$server$habit_tracker$node_modules$moment$moment="January_February_March_April_May_June_July_August_September_October_November_December".split("_");
function localeMonths$$module$Applications$server$habit_tracker$node_modules$moment$moment(m,format){if(!m)return isArray$$module$Applications$server$habit_tracker$node_modules$moment$moment(this._months)?this._months:this._months["standalone"];return isArray$$module$Applications$server$habit_tracker$node_modules$moment$moment(this._months)?this._months[m.month()]:this._months[(this._months.isFormat||MONTHS_IN_FORMAT$$module$Applications$server$habit_tracker$node_modules$moment$moment).test(format)?
"format":"standalone"][m.month()]}var defaultLocaleMonthsShort$$module$Applications$server$habit_tracker$node_modules$moment$moment="Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_");
function localeMonthsShort$$module$Applications$server$habit_tracker$node_modules$moment$moment(m,format){if(!m)return isArray$$module$Applications$server$habit_tracker$node_modules$moment$moment(this._monthsShort)?this._monthsShort:this._monthsShort["standalone"];return isArray$$module$Applications$server$habit_tracker$node_modules$moment$moment(this._monthsShort)?this._monthsShort[m.month()]:this._monthsShort[MONTHS_IN_FORMAT$$module$Applications$server$habit_tracker$node_modules$moment$moment.test(format)?
"format":"standalone"][m.month()]}
function handleStrictParse$$module$Applications$server$habit_tracker$node_modules$moment$moment(monthName,format,strict){var i;var ii;var mom;var llc=monthName.toLocaleLowerCase();if(!this._monthsParse){this._monthsParse=[];this._longMonthsParse=[];this._shortMonthsParse=[];for(i=0;i<12;++i){mom=createUTC$$module$Applications$server$habit_tracker$node_modules$moment$moment([2E3,i]);this._shortMonthsParse[i]=this.monthsShort(mom,"").toLocaleLowerCase();this._longMonthsParse[i]=this.months(mom,"").toLocaleLowerCase()}}if(strict)if(format===
"MMM"){ii=indexOf$$module$Applications$server$habit_tracker$node_modules$moment$moment.call(this._shortMonthsParse,llc);return ii!==-1?ii:null}else{ii=indexOf$$module$Applications$server$habit_tracker$node_modules$moment$moment.call(this._longMonthsParse,llc);return ii!==-1?ii:null}else if(format==="MMM"){ii=indexOf$$module$Applications$server$habit_tracker$node_modules$moment$moment.call(this._shortMonthsParse,llc);if(ii!==-1)return ii;ii=indexOf$$module$Applications$server$habit_tracker$node_modules$moment$moment.call(this._longMonthsParse,
llc);return ii!==-1?ii:null}else{ii=indexOf$$module$Applications$server$habit_tracker$node_modules$moment$moment.call(this._longMonthsParse,llc);if(ii!==-1)return ii;ii=indexOf$$module$Applications$server$habit_tracker$node_modules$moment$moment.call(this._shortMonthsParse,llc);return ii!==-1?ii:null}}
function localeMonthsParse$$module$Applications$server$habit_tracker$node_modules$moment$moment(monthName,format,strict){var i;var mom;var regex;if(this._monthsParseExact)return handleStrictParse$$module$Applications$server$habit_tracker$node_modules$moment$moment.call(this,monthName,format,strict);if(!this._monthsParse){this._monthsParse=[];this._longMonthsParse=[];this._shortMonthsParse=[]}for(i=0;i<12;i++){mom=createUTC$$module$Applications$server$habit_tracker$node_modules$moment$moment([2E3,
i]);if(strict&&!this._longMonthsParse[i]){this._longMonthsParse[i]=new RegExp("^"+this.months(mom,"").replace(".","")+"$","i");this._shortMonthsParse[i]=new RegExp("^"+this.monthsShort(mom,"").replace(".","")+"$","i")}if(!strict&&!this._monthsParse[i]){regex="^"+this.months(mom,"")+"|^"+this.monthsShort(mom,"");this._monthsParse[i]=new RegExp(regex.replace(".",""),"i")}if(strict&&format==="MMMM"&&this._longMonthsParse[i].test(monthName))return i;else if(strict&&format==="MMM"&&this._shortMonthsParse[i].test(monthName))return i;
else if(!strict&&this._monthsParse[i].test(monthName))return i}}
function setMonth$$module$Applications$server$habit_tracker$node_modules$moment$moment(mom,value){var dayOfMonth;if(!mom.isValid())return mom;if(typeof value==="string")if(/^\d+$/.test(value))value=toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(value);else{value=mom.localeData().monthsParse(value);if(!isNumber$$module$Applications$server$habit_tracker$node_modules$moment$moment(value))return mom}dayOfMonth=Math.min(mom.date(),daysInMonth$$module$Applications$server$habit_tracker$node_modules$moment$moment(mom.year(),
value));mom._d["set"+(mom._isUTC?"UTC":"")+"Month"](value,dayOfMonth);return mom}function getSetMonth$$module$Applications$server$habit_tracker$node_modules$moment$moment(value){if(value!=null){setMonth$$module$Applications$server$habit_tracker$node_modules$moment$moment(this,value);hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.updateOffset(this,true);return this}else return get$$module$Applications$server$habit_tracker$node_modules$moment$moment(this,"Month")}
function getDaysInMonth$$module$Applications$server$habit_tracker$node_modules$moment$moment(){return daysInMonth$$module$Applications$server$habit_tracker$node_modules$moment$moment(this.year(),this.month())}var defaultMonthsShortRegex$$module$Applications$server$habit_tracker$node_modules$moment$moment=matchWord$$module$Applications$server$habit_tracker$node_modules$moment$moment;
function monthsShortRegex$$module$Applications$server$habit_tracker$node_modules$moment$moment(isStrict){if(this._monthsParseExact){if(!hasOwnProp$$module$Applications$server$habit_tracker$node_modules$moment$moment(this,"_monthsRegex"))computeMonthsParse$$module$Applications$server$habit_tracker$node_modules$moment$moment.call(this);if(isStrict)return this._monthsShortStrictRegex;else return this._monthsShortRegex}else{if(!hasOwnProp$$module$Applications$server$habit_tracker$node_modules$moment$moment(this,
"_monthsShortRegex"))this._monthsShortRegex=defaultMonthsShortRegex$$module$Applications$server$habit_tracker$node_modules$moment$moment;return this._monthsShortStrictRegex&&isStrict?this._monthsShortStrictRegex:this._monthsShortRegex}}var defaultMonthsRegex$$module$Applications$server$habit_tracker$node_modules$moment$moment=matchWord$$module$Applications$server$habit_tracker$node_modules$moment$moment;
function monthsRegex$$module$Applications$server$habit_tracker$node_modules$moment$moment(isStrict){if(this._monthsParseExact){if(!hasOwnProp$$module$Applications$server$habit_tracker$node_modules$moment$moment(this,"_monthsRegex"))computeMonthsParse$$module$Applications$server$habit_tracker$node_modules$moment$moment.call(this);if(isStrict)return this._monthsStrictRegex;else return this._monthsRegex}else{if(!hasOwnProp$$module$Applications$server$habit_tracker$node_modules$moment$moment(this,"_monthsRegex"))this._monthsRegex=
defaultMonthsRegex$$module$Applications$server$habit_tracker$node_modules$moment$moment;return this._monthsStrictRegex&&isStrict?this._monthsStrictRegex:this._monthsRegex}}
function computeMonthsParse$$module$Applications$server$habit_tracker$node_modules$moment$moment(){function cmpLenRev(a,b){return b.length-a.length}var shortPieces=[];var longPieces=[];var mixedPieces=[];var i;var mom;for(i=0;i<12;i++){mom=createUTC$$module$Applications$server$habit_tracker$node_modules$moment$moment([2E3,i]);shortPieces.push(this.monthsShort(mom,""));longPieces.push(this.months(mom,""));mixedPieces.push(this.months(mom,""));mixedPieces.push(this.monthsShort(mom,""))}shortPieces.sort(cmpLenRev);
longPieces.sort(cmpLenRev);mixedPieces.sort(cmpLenRev);for(i=0;i<12;i++){shortPieces[i]=regexEscape$$module$Applications$server$habit_tracker$node_modules$moment$moment(shortPieces[i]);longPieces[i]=regexEscape$$module$Applications$server$habit_tracker$node_modules$moment$moment(longPieces[i])}for(i=0;i<24;i++)mixedPieces[i]=regexEscape$$module$Applications$server$habit_tracker$node_modules$moment$moment(mixedPieces[i]);this._monthsRegex=new RegExp("^("+mixedPieces.join("|")+")","i");this._monthsShortRegex=
this._monthsRegex;this._monthsStrictRegex=new RegExp("^("+longPieces.join("|")+")","i");this._monthsShortStrictRegex=new RegExp("^("+shortPieces.join("|")+")","i")}function createDate$$module$Applications$server$habit_tracker$node_modules$moment$moment(y,m,d,h,M,s,ms){var date=new Date(y,m,d,h,M,s,ms);if(y<100&&y>=0&&isFinite(date.getFullYear()))date.setFullYear(y);return date}
function createUTCDate$$module$Applications$server$habit_tracker$node_modules$moment$moment(y){var date=new Date(Date.UTC.apply(null,arguments));if(y<100&&y>=0&&isFinite(date.getUTCFullYear()))date.setUTCFullYear(y);return date}function firstWeekOffset$$module$Applications$server$habit_tracker$node_modules$moment$moment(year,dow,doy){var fwd=7+dow-doy;var fwdlw=(7+createUTCDate$$module$Applications$server$habit_tracker$node_modules$moment$moment(year,0,fwd).getUTCDay()-dow)%7;return-fwdlw+fwd-1}
function dayOfYearFromWeeks$$module$Applications$server$habit_tracker$node_modules$moment$moment(year,week,weekday,dow,doy){var localWeekday=(7+weekday-dow)%7;var weekOffset=firstWeekOffset$$module$Applications$server$habit_tracker$node_modules$moment$moment(year,dow,doy);var dayOfYear=1+7*(week-1)+localWeekday+weekOffset;var resYear;var resDayOfYear;if(dayOfYear<=0){resYear=year-1;resDayOfYear=daysInYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(resYear)+dayOfYear}else if(dayOfYear>
daysInYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(year)){resYear=year+1;resDayOfYear=dayOfYear-daysInYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(year)}else{resYear=year;resDayOfYear=dayOfYear}return{year:resYear,dayOfYear:resDayOfYear}}
function weekOfYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(mom,dow,doy){var weekOffset=firstWeekOffset$$module$Applications$server$habit_tracker$node_modules$moment$moment(mom.year(),dow,doy);var week=Math.floor((mom.dayOfYear()-weekOffset-1)/7)+1;var resWeek;var resYear;if(week<1){resYear=mom.year()-1;resWeek=week+weeksInYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(resYear,dow,doy)}else if(week>weeksInYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(mom.year(),
dow,doy)){resWeek=week-weeksInYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(mom.year(),dow,doy);resYear=mom.year()+1}else{resYear=mom.year();resWeek=week}return{week:resWeek,year:resYear}}
function weeksInYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(year,dow,doy){var weekOffset=firstWeekOffset$$module$Applications$server$habit_tracker$node_modules$moment$moment(year,dow,doy);var weekOffsetNext=firstWeekOffset$$module$Applications$server$habit_tracker$node_modules$moment$moment(year+1,dow,doy);return(daysInYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(year)-weekOffset+weekOffsetNext)/7}
addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("w",["ww",2],"wo","week");addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("W",["WW",2],"Wo","isoWeek");addUnitAlias$$module$Applications$server$habit_tracker$node_modules$moment$moment("week","w");addUnitAlias$$module$Applications$server$habit_tracker$node_modules$moment$moment("isoWeek","W");
addUnitPriority$$module$Applications$server$habit_tracker$node_modules$moment$moment("week",5);addUnitPriority$$module$Applications$server$habit_tracker$node_modules$moment$moment("isoWeek",5);addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("w",match1to2$$module$Applications$server$habit_tracker$node_modules$moment$moment);
addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("ww",match1to2$$module$Applications$server$habit_tracker$node_modules$moment$moment,match2$$module$Applications$server$habit_tracker$node_modules$moment$moment);addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("W",match1to2$$module$Applications$server$habit_tracker$node_modules$moment$moment);
addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("WW",match1to2$$module$Applications$server$habit_tracker$node_modules$moment$moment,match2$$module$Applications$server$habit_tracker$node_modules$moment$moment);addWeekParseToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(["w","ww","W","WW"],function(input,week,config,token){week[token.substr(0,1)]=toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(input)});
function localeWeek$$module$Applications$server$habit_tracker$node_modules$moment$moment(mom){return weekOfYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(mom,this._week.dow,this._week.doy).week}var defaultLocaleWeek$$module$Applications$server$habit_tracker$node_modules$moment$moment={dow:0,doy:6};function localeFirstDayOfWeek$$module$Applications$server$habit_tracker$node_modules$moment$moment(){return this._week.dow}
function localeFirstDayOfYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(){return this._week.doy}function getSetWeek$$module$Applications$server$habit_tracker$node_modules$moment$moment(input){var week=this.localeData().week(this);return input==null?week:this.add((input-week)*7,"d")}
function getSetISOWeek$$module$Applications$server$habit_tracker$node_modules$moment$moment(input){var week=weekOfYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(this,1,4).week;return input==null?week:this.add((input-week)*7,"d")}addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("d",0,"do","day");
addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("dd",0,0,function(format){return this.localeData().weekdaysMin(this,format)});addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("ddd",0,0,function(format){return this.localeData().weekdaysShort(this,format)});addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("dddd",0,0,function(format){return this.localeData().weekdays(this,format)});
addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("e",0,0,"weekday");addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("E",0,0,"isoWeekday");addUnitAlias$$module$Applications$server$habit_tracker$node_modules$moment$moment("day","d");addUnitAlias$$module$Applications$server$habit_tracker$node_modules$moment$moment("weekday","e");addUnitAlias$$module$Applications$server$habit_tracker$node_modules$moment$moment("isoWeekday","E");
addUnitPriority$$module$Applications$server$habit_tracker$node_modules$moment$moment("day",11);addUnitPriority$$module$Applications$server$habit_tracker$node_modules$moment$moment("weekday",11);addUnitPriority$$module$Applications$server$habit_tracker$node_modules$moment$moment("isoWeekday",11);addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("d",match1to2$$module$Applications$server$habit_tracker$node_modules$moment$moment);
addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("e",match1to2$$module$Applications$server$habit_tracker$node_modules$moment$moment);addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("E",match1to2$$module$Applications$server$habit_tracker$node_modules$moment$moment);addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("dd",function(isStrict,locale){return locale.weekdaysMinRegex(isStrict)});
addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("ddd",function(isStrict,locale){return locale.weekdaysShortRegex(isStrict)});addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("dddd",function(isStrict,locale){return locale.weekdaysRegex(isStrict)});
addWeekParseToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(["dd","ddd","dddd"],function(input,week,config,token){var weekday=config._locale.weekdaysParse(input,token,config._strict);if(weekday!=null)week.d=weekday;else getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(config).invalidWeekday=input});
addWeekParseToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(["d","e","E"],function(input,week,config,token){week[token]=toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(input)});
function parseWeekday$$module$Applications$server$habit_tracker$node_modules$moment$moment(input,locale){if(typeof input!=="string")return input;if(!isNaN(input))return parseInt(input,10);input=locale.weekdaysParse(input);if(typeof input==="number")return input;return null}function parseIsoWeekday$$module$Applications$server$habit_tracker$node_modules$moment$moment(input,locale){if(typeof input==="string")return locale.weekdaysParse(input)%7||7;return isNaN(input)?null:input}
var defaultLocaleWeekdays$$module$Applications$server$habit_tracker$node_modules$moment$moment="Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_");
function localeWeekdays$$module$Applications$server$habit_tracker$node_modules$moment$moment(m,format){if(!m)return isArray$$module$Applications$server$habit_tracker$node_modules$moment$moment(this._weekdays)?this._weekdays:this._weekdays["standalone"];return isArray$$module$Applications$server$habit_tracker$node_modules$moment$moment(this._weekdays)?this._weekdays[m.day()]:this._weekdays[this._weekdays.isFormat.test(format)?"format":"standalone"][m.day()]}
var defaultLocaleWeekdaysShort$$module$Applications$server$habit_tracker$node_modules$moment$moment="Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_");function localeWeekdaysShort$$module$Applications$server$habit_tracker$node_modules$moment$moment(m){return m?this._weekdaysShort[m.day()]:this._weekdaysShort}var defaultLocaleWeekdaysMin$$module$Applications$server$habit_tracker$node_modules$moment$moment="Su_Mo_Tu_We_Th_Fr_Sa".split("_");
function localeWeekdaysMin$$module$Applications$server$habit_tracker$node_modules$moment$moment(m){return m?this._weekdaysMin[m.day()]:this._weekdaysMin}
function handleStrictParse$1$$module$Applications$server$habit_tracker$node_modules$moment$moment(weekdayName,format,strict){var i;var ii;var mom;var llc=weekdayName.toLocaleLowerCase();if(!this._weekdaysParse){this._weekdaysParse=[];this._shortWeekdaysParse=[];this._minWeekdaysParse=[];for(i=0;i<7;++i){mom=createUTC$$module$Applications$server$habit_tracker$node_modules$moment$moment([2E3,1]).day(i);this._minWeekdaysParse[i]=this.weekdaysMin(mom,"").toLocaleLowerCase();this._shortWeekdaysParse[i]=
this.weekdaysShort(mom,"").toLocaleLowerCase();this._weekdaysParse[i]=this.weekdays(mom,"").toLocaleLowerCase()}}if(strict)if(format==="dddd"){ii=indexOf$$module$Applications$server$habit_tracker$node_modules$moment$moment.call(this._weekdaysParse,llc);return ii!==-1?ii:null}else if(format==="ddd"){ii=indexOf$$module$Applications$server$habit_tracker$node_modules$moment$moment.call(this._shortWeekdaysParse,llc);return ii!==-1?ii:null}else{ii=indexOf$$module$Applications$server$habit_tracker$node_modules$moment$moment.call(this._minWeekdaysParse,
llc);return ii!==-1?ii:null}else if(format==="dddd"){ii=indexOf$$module$Applications$server$habit_tracker$node_modules$moment$moment.call(this._weekdaysParse,llc);if(ii!==-1)return ii;ii=indexOf$$module$Applications$server$habit_tracker$node_modules$moment$moment.call(this._shortWeekdaysParse,llc);if(ii!==-1)return ii;ii=indexOf$$module$Applications$server$habit_tracker$node_modules$moment$moment.call(this._minWeekdaysParse,llc);return ii!==-1?ii:null}else if(format==="ddd"){ii=indexOf$$module$Applications$server$habit_tracker$node_modules$moment$moment.call(this._shortWeekdaysParse,
llc);if(ii!==-1)return ii;ii=indexOf$$module$Applications$server$habit_tracker$node_modules$moment$moment.call(this._weekdaysParse,llc);if(ii!==-1)return ii;ii=indexOf$$module$Applications$server$habit_tracker$node_modules$moment$moment.call(this._minWeekdaysParse,llc);return ii!==-1?ii:null}else{ii=indexOf$$module$Applications$server$habit_tracker$node_modules$moment$moment.call(this._minWeekdaysParse,llc);if(ii!==-1)return ii;ii=indexOf$$module$Applications$server$habit_tracker$node_modules$moment$moment.call(this._weekdaysParse,
llc);if(ii!==-1)return ii;ii=indexOf$$module$Applications$server$habit_tracker$node_modules$moment$moment.call(this._shortWeekdaysParse,llc);return ii!==-1?ii:null}}
function localeWeekdaysParse$$module$Applications$server$habit_tracker$node_modules$moment$moment(weekdayName,format,strict){var i;var mom;var regex;if(this._weekdaysParseExact)return handleStrictParse$1$$module$Applications$server$habit_tracker$node_modules$moment$moment.call(this,weekdayName,format,strict);if(!this._weekdaysParse){this._weekdaysParse=[];this._minWeekdaysParse=[];this._shortWeekdaysParse=[];this._fullWeekdaysParse=[]}for(i=0;i<7;i++){mom=createUTC$$module$Applications$server$habit_tracker$node_modules$moment$moment([2E3,
1]).day(i);if(strict&&!this._fullWeekdaysParse[i]){this._fullWeekdaysParse[i]=new RegExp("^"+this.weekdays(mom,"").replace(".","\\.?")+"$","i");this._shortWeekdaysParse[i]=new RegExp("^"+this.weekdaysShort(mom,"").replace(".","\\.?")+"$","i");this._minWeekdaysParse[i]=new RegExp("^"+this.weekdaysMin(mom,"").replace(".","\\.?")+"$","i")}if(!this._weekdaysParse[i]){regex="^"+this.weekdays(mom,"")+"|^"+this.weekdaysShort(mom,"")+"|^"+this.weekdaysMin(mom,"");this._weekdaysParse[i]=new RegExp(regex.replace(".",
""),"i")}if(strict&&format==="dddd"&&this._fullWeekdaysParse[i].test(weekdayName))return i;else if(strict&&format==="ddd"&&this._shortWeekdaysParse[i].test(weekdayName))return i;else if(strict&&format==="dd"&&this._minWeekdaysParse[i].test(weekdayName))return i;else if(!strict&&this._weekdaysParse[i].test(weekdayName))return i}}
function getSetDayOfWeek$$module$Applications$server$habit_tracker$node_modules$moment$moment(input){if(!this.isValid())return input!=null?this:NaN;var day=this._isUTC?this._d.getUTCDay():this._d.getDay();if(input!=null){input=parseWeekday$$module$Applications$server$habit_tracker$node_modules$moment$moment(input,this.localeData());return this.add(input-day,"d")}else return day}
function getSetLocaleDayOfWeek$$module$Applications$server$habit_tracker$node_modules$moment$moment(input){if(!this.isValid())return input!=null?this:NaN;var weekday=(this.day()+7-this.localeData()._week.dow)%7;return input==null?weekday:this.add(input-weekday,"d")}
function getSetISODayOfWeek$$module$Applications$server$habit_tracker$node_modules$moment$moment(input){if(!this.isValid())return input!=null?this:NaN;if(input!=null){var weekday=parseIsoWeekday$$module$Applications$server$habit_tracker$node_modules$moment$moment(input,this.localeData());return this.day(this.day()%7?weekday:weekday-7)}else return this.day()||7}var defaultWeekdaysRegex$$module$Applications$server$habit_tracker$node_modules$moment$moment=matchWord$$module$Applications$server$habit_tracker$node_modules$moment$moment;
function weekdaysRegex$$module$Applications$server$habit_tracker$node_modules$moment$moment(isStrict){if(this._weekdaysParseExact){if(!hasOwnProp$$module$Applications$server$habit_tracker$node_modules$moment$moment(this,"_weekdaysRegex"))computeWeekdaysParse$$module$Applications$server$habit_tracker$node_modules$moment$moment.call(this);if(isStrict)return this._weekdaysStrictRegex;else return this._weekdaysRegex}else{if(!hasOwnProp$$module$Applications$server$habit_tracker$node_modules$moment$moment(this,
"_weekdaysRegex"))this._weekdaysRegex=defaultWeekdaysRegex$$module$Applications$server$habit_tracker$node_modules$moment$moment;return this._weekdaysStrictRegex&&isStrict?this._weekdaysStrictRegex:this._weekdaysRegex}}var defaultWeekdaysShortRegex$$module$Applications$server$habit_tracker$node_modules$moment$moment=matchWord$$module$Applications$server$habit_tracker$node_modules$moment$moment;
function weekdaysShortRegex$$module$Applications$server$habit_tracker$node_modules$moment$moment(isStrict){if(this._weekdaysParseExact){if(!hasOwnProp$$module$Applications$server$habit_tracker$node_modules$moment$moment(this,"_weekdaysRegex"))computeWeekdaysParse$$module$Applications$server$habit_tracker$node_modules$moment$moment.call(this);if(isStrict)return this._weekdaysShortStrictRegex;else return this._weekdaysShortRegex}else{if(!hasOwnProp$$module$Applications$server$habit_tracker$node_modules$moment$moment(this,
"_weekdaysShortRegex"))this._weekdaysShortRegex=defaultWeekdaysShortRegex$$module$Applications$server$habit_tracker$node_modules$moment$moment;return this._weekdaysShortStrictRegex&&isStrict?this._weekdaysShortStrictRegex:this._weekdaysShortRegex}}var defaultWeekdaysMinRegex$$module$Applications$server$habit_tracker$node_modules$moment$moment=matchWord$$module$Applications$server$habit_tracker$node_modules$moment$moment;
function weekdaysMinRegex$$module$Applications$server$habit_tracker$node_modules$moment$moment(isStrict){if(this._weekdaysParseExact){if(!hasOwnProp$$module$Applications$server$habit_tracker$node_modules$moment$moment(this,"_weekdaysRegex"))computeWeekdaysParse$$module$Applications$server$habit_tracker$node_modules$moment$moment.call(this);if(isStrict)return this._weekdaysMinStrictRegex;else return this._weekdaysMinRegex}else{if(!hasOwnProp$$module$Applications$server$habit_tracker$node_modules$moment$moment(this,
"_weekdaysMinRegex"))this._weekdaysMinRegex=defaultWeekdaysMinRegex$$module$Applications$server$habit_tracker$node_modules$moment$moment;return this._weekdaysMinStrictRegex&&isStrict?this._weekdaysMinStrictRegex:this._weekdaysMinRegex}}
function computeWeekdaysParse$$module$Applications$server$habit_tracker$node_modules$moment$moment(){function cmpLenRev(a,b){return b.length-a.length}var minPieces=[];var shortPieces=[];var longPieces=[];var mixedPieces=[];var i;var mom;var minp;var shortp;var longp;for(i=0;i<7;i++){mom=createUTC$$module$Applications$server$habit_tracker$node_modules$moment$moment([2E3,1]).day(i);minp=this.weekdaysMin(mom,"");shortp=this.weekdaysShort(mom,"");longp=this.weekdays(mom,"");minPieces.push(minp);shortPieces.push(shortp);
longPieces.push(longp);mixedPieces.push(minp);mixedPieces.push(shortp);mixedPieces.push(longp)}minPieces.sort(cmpLenRev);shortPieces.sort(cmpLenRev);longPieces.sort(cmpLenRev);mixedPieces.sort(cmpLenRev);for(i=0;i<7;i++){shortPieces[i]=regexEscape$$module$Applications$server$habit_tracker$node_modules$moment$moment(shortPieces[i]);longPieces[i]=regexEscape$$module$Applications$server$habit_tracker$node_modules$moment$moment(longPieces[i]);mixedPieces[i]=regexEscape$$module$Applications$server$habit_tracker$node_modules$moment$moment(mixedPieces[i])}this._weekdaysRegex=
new RegExp("^("+mixedPieces.join("|")+")","i");this._weekdaysShortRegex=this._weekdaysRegex;this._weekdaysMinRegex=this._weekdaysRegex;this._weekdaysStrictRegex=new RegExp("^("+longPieces.join("|")+")","i");this._weekdaysShortStrictRegex=new RegExp("^("+shortPieces.join("|")+")","i");this._weekdaysMinStrictRegex=new RegExp("^("+minPieces.join("|")+")","i")}function hFormat$$module$Applications$server$habit_tracker$node_modules$moment$moment(){return this.hours()%12||12}
function kFormat$$module$Applications$server$habit_tracker$node_modules$moment$moment(){return this.hours()||24}addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("H",["HH",2],0,"hour");addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("h",["hh",2],0,hFormat$$module$Applications$server$habit_tracker$node_modules$moment$moment);addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("k",["kk",2],0,kFormat$$module$Applications$server$habit_tracker$node_modules$moment$moment);
addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("hmm",0,0,function(){return""+hFormat$$module$Applications$server$habit_tracker$node_modules$moment$moment.apply(this)+zeroFill$$module$Applications$server$habit_tracker$node_modules$moment$moment(this.minutes(),2)});
addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("hmmss",0,0,function(){return""+hFormat$$module$Applications$server$habit_tracker$node_modules$moment$moment.apply(this)+zeroFill$$module$Applications$server$habit_tracker$node_modules$moment$moment(this.minutes(),2)+zeroFill$$module$Applications$server$habit_tracker$node_modules$moment$moment(this.seconds(),2)});
addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("Hmm",0,0,function(){return""+this.hours()+zeroFill$$module$Applications$server$habit_tracker$node_modules$moment$moment(this.minutes(),2)});
addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("Hmmss",0,0,function(){return""+this.hours()+zeroFill$$module$Applications$server$habit_tracker$node_modules$moment$moment(this.minutes(),2)+zeroFill$$module$Applications$server$habit_tracker$node_modules$moment$moment(this.seconds(),2)});
function meridiem$$module$Applications$server$habit_tracker$node_modules$moment$moment(token,lowercase){addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(token,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),lowercase)})}meridiem$$module$Applications$server$habit_tracker$node_modules$moment$moment("a",true);meridiem$$module$Applications$server$habit_tracker$node_modules$moment$moment("A",false);
addUnitAlias$$module$Applications$server$habit_tracker$node_modules$moment$moment("hour","h");addUnitPriority$$module$Applications$server$habit_tracker$node_modules$moment$moment("hour",13);function matchMeridiem$$module$Applications$server$habit_tracker$node_modules$moment$moment(isStrict,locale){return locale._meridiemParse}addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("a",matchMeridiem$$module$Applications$server$habit_tracker$node_modules$moment$moment);
addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("A",matchMeridiem$$module$Applications$server$habit_tracker$node_modules$moment$moment);addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("H",match1to2$$module$Applications$server$habit_tracker$node_modules$moment$moment);addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("h",match1to2$$module$Applications$server$habit_tracker$node_modules$moment$moment);
addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("k",match1to2$$module$Applications$server$habit_tracker$node_modules$moment$moment);addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("HH",match1to2$$module$Applications$server$habit_tracker$node_modules$moment$moment,match2$$module$Applications$server$habit_tracker$node_modules$moment$moment);
addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("hh",match1to2$$module$Applications$server$habit_tracker$node_modules$moment$moment,match2$$module$Applications$server$habit_tracker$node_modules$moment$moment);addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("kk",match1to2$$module$Applications$server$habit_tracker$node_modules$moment$moment,match2$$module$Applications$server$habit_tracker$node_modules$moment$moment);
addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("hmm",match3to4$$module$Applications$server$habit_tracker$node_modules$moment$moment);addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("hmmss",match5to6$$module$Applications$server$habit_tracker$node_modules$moment$moment);addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("Hmm",match3to4$$module$Applications$server$habit_tracker$node_modules$moment$moment);
addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("Hmmss",match5to6$$module$Applications$server$habit_tracker$node_modules$moment$moment);addParseToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(["H","HH"],HOUR$$module$Applications$server$habit_tracker$node_modules$moment$moment);
addParseToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(["k","kk"],function(input,array,config){var kInput=toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(input);array[HOUR$$module$Applications$server$habit_tracker$node_modules$moment$moment]=kInput===24?0:kInput});addParseToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(["a","A"],function(input,array,config){config._isPm=config._locale.isPM(input);config._meridiem=input});
addParseToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(["h","hh"],function(input,array,config){array[HOUR$$module$Applications$server$habit_tracker$node_modules$moment$moment]=toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(input);getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(config).bigHour=true});
addParseToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("hmm",function(input,array,config){var pos=input.length-2;array[HOUR$$module$Applications$server$habit_tracker$node_modules$moment$moment]=toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(input.substr(0,pos));array[MINUTE$$module$Applications$server$habit_tracker$node_modules$moment$moment]=toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(input.substr(pos));getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(config).bigHour=
true});
addParseToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("hmmss",function(input,array,config){var pos1=input.length-4;var pos2=input.length-2;array[HOUR$$module$Applications$server$habit_tracker$node_modules$moment$moment]=toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(input.substr(0,pos1));array[MINUTE$$module$Applications$server$habit_tracker$node_modules$moment$moment]=toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(input.substr(pos1,2));
array[SECOND$$module$Applications$server$habit_tracker$node_modules$moment$moment]=toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(input.substr(pos2));getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(config).bigHour=true});
addParseToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("Hmm",function(input,array,config){var pos=input.length-2;array[HOUR$$module$Applications$server$habit_tracker$node_modules$moment$moment]=toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(input.substr(0,pos));array[MINUTE$$module$Applications$server$habit_tracker$node_modules$moment$moment]=toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(input.substr(pos))});
addParseToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("Hmmss",function(input,array,config){var pos1=input.length-4;var pos2=input.length-2;array[HOUR$$module$Applications$server$habit_tracker$node_modules$moment$moment]=toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(input.substr(0,pos1));array[MINUTE$$module$Applications$server$habit_tracker$node_modules$moment$moment]=toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(input.substr(pos1,
2));array[SECOND$$module$Applications$server$habit_tracker$node_modules$moment$moment]=toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(input.substr(pos2))});function localeIsPM$$module$Applications$server$habit_tracker$node_modules$moment$moment(input){return(input+"").toLowerCase().charAt(0)==="p"}var defaultLocaleMeridiemParse$$module$Applications$server$habit_tracker$node_modules$moment$moment=/[ap]\.?m?\.?/i;
function localeMeridiem$$module$Applications$server$habit_tracker$node_modules$moment$moment(hours,minutes,isLower){if(hours>11)return isLower?"pm":"PM";else return isLower?"am":"AM"}var getSetHour$$module$Applications$server$habit_tracker$node_modules$moment$moment=makeGetSet$$module$Applications$server$habit_tracker$node_modules$moment$moment("Hours",true);
var baseConfig$$module$Applications$server$habit_tracker$node_modules$moment$moment={calendar:defaultCalendar$$module$Applications$server$habit_tracker$node_modules$moment$moment,longDateFormat:defaultLongDateFormat$$module$Applications$server$habit_tracker$node_modules$moment$moment,invalidDate:defaultInvalidDate$$module$Applications$server$habit_tracker$node_modules$moment$moment,ordinal:defaultOrdinal$$module$Applications$server$habit_tracker$node_modules$moment$moment,dayOfMonthOrdinalParse:defaultDayOfMonthOrdinalParse$$module$Applications$server$habit_tracker$node_modules$moment$moment,
relativeTime:defaultRelativeTime$$module$Applications$server$habit_tracker$node_modules$moment$moment,months:defaultLocaleMonths$$module$Applications$server$habit_tracker$node_modules$moment$moment,monthsShort:defaultLocaleMonthsShort$$module$Applications$server$habit_tracker$node_modules$moment$moment,week:defaultLocaleWeek$$module$Applications$server$habit_tracker$node_modules$moment$moment,weekdays:defaultLocaleWeekdays$$module$Applications$server$habit_tracker$node_modules$moment$moment,weekdaysMin:defaultLocaleWeekdaysMin$$module$Applications$server$habit_tracker$node_modules$moment$moment,
weekdaysShort:defaultLocaleWeekdaysShort$$module$Applications$server$habit_tracker$node_modules$moment$moment,meridiemParse:defaultLocaleMeridiemParse$$module$Applications$server$habit_tracker$node_modules$moment$moment};var locales$$module$Applications$server$habit_tracker$node_modules$moment$moment={};var localeFamilies$$module$Applications$server$habit_tracker$node_modules$moment$moment={};var globalLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment;
function normalizeLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment(key){return key?key.toLowerCase().replace("_","-"):key}
function chooseLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment(names){var i=0;var j;var next;var locale;var split;while(i<names.length){split=normalizeLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment(names[i]).split("-");j=split.length;next=normalizeLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment(names[i+1]);next=next?next.split("-"):null;while(j>0){locale=loadLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment(split.slice(0,
j).join("-"));if(locale)return locale;if(next&&next.length>=j&&compareArrays$$module$Applications$server$habit_tracker$node_modules$moment$moment(split,next,true)>=j-1)break;j--}i++}return globalLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment}
function loadLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment(name){var oldLocale=null;if(!locales$$module$Applications$server$habit_tracker$node_modules$moment$moment[name]&&"object"!=="undefined"&&module&&module$Applications$server$habit_tracker$node_modules$moment$moment["default"])try{oldLocale=globalLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment._abbr;var aliasedRequire=require;aliasedRequire("./locale/"+name);getSetGlobalLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment(oldLocale)}catch(e){}return locales$$module$Applications$server$habit_tracker$node_modules$moment$moment[name]}
function getSetGlobalLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment(key,values){var data;if(key){if(isUndefined$$module$Applications$server$habit_tracker$node_modules$moment$moment(values))data=getLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment(key);else data=defineLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment(key,values);if(data)globalLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment=
data;else if(typeof console!=="undefined"&&console.warn)console.warn("Locale "+key+" not found. Did you forget to load it?")}return globalLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment._abbr}
function defineLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment(name,config){if(config!==null){var locale;var parentConfig=baseConfig$$module$Applications$server$habit_tracker$node_modules$moment$moment;config.abbr=name;if(locales$$module$Applications$server$habit_tracker$node_modules$moment$moment[name]!=null){deprecateSimple$$module$Applications$server$habit_tracker$node_modules$moment$moment("defineLocaleOverride","use moment.updateLocale(localeName, config) to change "+
"an existing locale. moment.defineLocale(localeName, "+"config) should only be used for creating a new locale "+"See http://momentjs.com/guides/#/warnings/define-locale/ for more info.");parentConfig=locales$$module$Applications$server$habit_tracker$node_modules$moment$moment[name]._config}else if(config.parentLocale!=null)if(locales$$module$Applications$server$habit_tracker$node_modules$moment$moment[config.parentLocale]!=null)parentConfig=locales$$module$Applications$server$habit_tracker$node_modules$moment$moment[config.parentLocale]._config;
else{locale=loadLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment(config.parentLocale);if(locale!=null)parentConfig=locale._config;else{if(!localeFamilies$$module$Applications$server$habit_tracker$node_modules$moment$moment[config.parentLocale])localeFamilies$$module$Applications$server$habit_tracker$node_modules$moment$moment[config.parentLocale]=[];localeFamilies$$module$Applications$server$habit_tracker$node_modules$moment$moment[config.parentLocale].push({name:name,config:config});
return null}}locales$$module$Applications$server$habit_tracker$node_modules$moment$moment[name]=new Locale$$module$Applications$server$habit_tracker$node_modules$moment$moment(mergeConfigs$$module$Applications$server$habit_tracker$node_modules$moment$moment(parentConfig,config));if(localeFamilies$$module$Applications$server$habit_tracker$node_modules$moment$moment[name])localeFamilies$$module$Applications$server$habit_tracker$node_modules$moment$moment[name].forEach(function(x){defineLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment(x.name,
x.config)});getSetGlobalLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment(name);return locales$$module$Applications$server$habit_tracker$node_modules$moment$moment[name]}else{delete locales$$module$Applications$server$habit_tracker$node_modules$moment$moment[name];return null}}
function updateLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment(name,config){if(config!=null){var locale;var tmpLocale;var parentConfig=baseConfig$$module$Applications$server$habit_tracker$node_modules$moment$moment;tmpLocale=loadLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment(name);if(tmpLocale!=null)parentConfig=tmpLocale._config;config=mergeConfigs$$module$Applications$server$habit_tracker$node_modules$moment$moment(parentConfig,config);locale=
new Locale$$module$Applications$server$habit_tracker$node_modules$moment$moment(config);locale.parentLocale=locales$$module$Applications$server$habit_tracker$node_modules$moment$moment[name];locales$$module$Applications$server$habit_tracker$node_modules$moment$moment[name]=locale;getSetGlobalLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment(name)}else if(locales$$module$Applications$server$habit_tracker$node_modules$moment$moment[name]!=null)if(locales$$module$Applications$server$habit_tracker$node_modules$moment$moment[name].parentLocale!=
null)locales$$module$Applications$server$habit_tracker$node_modules$moment$moment[name]=locales$$module$Applications$server$habit_tracker$node_modules$moment$moment[name].parentLocale;else if(locales$$module$Applications$server$habit_tracker$node_modules$moment$moment[name]!=null)delete locales$$module$Applications$server$habit_tracker$node_modules$moment$moment[name];return locales$$module$Applications$server$habit_tracker$node_modules$moment$moment[name]}
function getLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment(key){var locale;if(key&&key._locale&&key._locale._abbr)key=key._locale._abbr;if(!key)return globalLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment;if(!isArray$$module$Applications$server$habit_tracker$node_modules$moment$moment(key)){locale=loadLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment(key);if(locale)return locale;key=[key]}return chooseLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment(key)}
function listLocales$$module$Applications$server$habit_tracker$node_modules$moment$moment(){return keys$$module$Applications$server$habit_tracker$node_modules$moment$moment(locales$$module$Applications$server$habit_tracker$node_modules$moment$moment)}
function checkOverflow$$module$Applications$server$habit_tracker$node_modules$moment$moment(m){var overflow;var a=m._a;if(a&&getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(m).overflow===-2){overflow=a[MONTH$$module$Applications$server$habit_tracker$node_modules$moment$moment]<0||a[MONTH$$module$Applications$server$habit_tracker$node_modules$moment$moment]>11?MONTH$$module$Applications$server$habit_tracker$node_modules$moment$moment:a[DATE$$module$Applications$server$habit_tracker$node_modules$moment$moment]<
1||a[DATE$$module$Applications$server$habit_tracker$node_modules$moment$moment]>daysInMonth$$module$Applications$server$habit_tracker$node_modules$moment$moment(a[YEAR$$module$Applications$server$habit_tracker$node_modules$moment$moment],a[MONTH$$module$Applications$server$habit_tracker$node_modules$moment$moment])?DATE$$module$Applications$server$habit_tracker$node_modules$moment$moment:a[HOUR$$module$Applications$server$habit_tracker$node_modules$moment$moment]<0||a[HOUR$$module$Applications$server$habit_tracker$node_modules$moment$moment]>
24||a[HOUR$$module$Applications$server$habit_tracker$node_modules$moment$moment]===24&&(a[MINUTE$$module$Applications$server$habit_tracker$node_modules$moment$moment]!==0||a[SECOND$$module$Applications$server$habit_tracker$node_modules$moment$moment]!==0||a[MILLISECOND$$module$Applications$server$habit_tracker$node_modules$moment$moment]!==0)?HOUR$$module$Applications$server$habit_tracker$node_modules$moment$moment:a[MINUTE$$module$Applications$server$habit_tracker$node_modules$moment$moment]<0||
a[MINUTE$$module$Applications$server$habit_tracker$node_modules$moment$moment]>59?MINUTE$$module$Applications$server$habit_tracker$node_modules$moment$moment:a[SECOND$$module$Applications$server$habit_tracker$node_modules$moment$moment]<0||a[SECOND$$module$Applications$server$habit_tracker$node_modules$moment$moment]>59?SECOND$$module$Applications$server$habit_tracker$node_modules$moment$moment:a[MILLISECOND$$module$Applications$server$habit_tracker$node_modules$moment$moment]<0||a[MILLISECOND$$module$Applications$server$habit_tracker$node_modules$moment$moment]>
999?MILLISECOND$$module$Applications$server$habit_tracker$node_modules$moment$moment:-1;if(getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(m)._overflowDayOfYear&&(overflow<YEAR$$module$Applications$server$habit_tracker$node_modules$moment$moment||overflow>DATE$$module$Applications$server$habit_tracker$node_modules$moment$moment))overflow=DATE$$module$Applications$server$habit_tracker$node_modules$moment$moment;if(getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(m)._overflowWeeks&&
overflow===-1)overflow=WEEK$$module$Applications$server$habit_tracker$node_modules$moment$moment;if(getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(m)._overflowWeekday&&overflow===-1)overflow=WEEKDAY$$module$Applications$server$habit_tracker$node_modules$moment$moment;getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(m).overflow=overflow}return m}
function defaults$$module$Applications$server$habit_tracker$node_modules$moment$moment(a,b,c){if(a!=null)return a;if(b!=null)return b;return c}
function currentDateArray$$module$Applications$server$habit_tracker$node_modules$moment$moment(config){var nowValue=new Date(hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.now());if(config._useUTC)return[nowValue.getUTCFullYear(),nowValue.getUTCMonth(),nowValue.getUTCDate()];return[nowValue.getFullYear(),nowValue.getMonth(),nowValue.getDate()]}
function configFromArray$$module$Applications$server$habit_tracker$node_modules$moment$moment(config){var i;var date;var input=[];var currentDate;var expectedWeekday;var yearToUse;if(config._d)return;currentDate=currentDateArray$$module$Applications$server$habit_tracker$node_modules$moment$moment(config);if(config._w&&config._a[DATE$$module$Applications$server$habit_tracker$node_modules$moment$moment]==null&&config._a[MONTH$$module$Applications$server$habit_tracker$node_modules$moment$moment]==null)dayOfYearFromWeekInfo$$module$Applications$server$habit_tracker$node_modules$moment$moment(config);
if(config._dayOfYear!=null){yearToUse=defaults$$module$Applications$server$habit_tracker$node_modules$moment$moment(config._a[YEAR$$module$Applications$server$habit_tracker$node_modules$moment$moment],currentDate[YEAR$$module$Applications$server$habit_tracker$node_modules$moment$moment]);if(config._dayOfYear>daysInYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(yearToUse)||config._dayOfYear===0)getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(config)._overflowDayOfYear=
true;date=createUTCDate$$module$Applications$server$habit_tracker$node_modules$moment$moment(yearToUse,0,config._dayOfYear);config._a[MONTH$$module$Applications$server$habit_tracker$node_modules$moment$moment]=date.getUTCMonth();config._a[DATE$$module$Applications$server$habit_tracker$node_modules$moment$moment]=date.getUTCDate()}for(i=0;i<3&&config._a[i]==null;++i)config._a[i]=input[i]=currentDate[i];for(;i<7;i++)config._a[i]=input[i]=config._a[i]==null?i===2?1:0:config._a[i];if(config._a[HOUR$$module$Applications$server$habit_tracker$node_modules$moment$moment]===
24&&config._a[MINUTE$$module$Applications$server$habit_tracker$node_modules$moment$moment]===0&&config._a[SECOND$$module$Applications$server$habit_tracker$node_modules$moment$moment]===0&&config._a[MILLISECOND$$module$Applications$server$habit_tracker$node_modules$moment$moment]===0){config._nextDay=true;config._a[HOUR$$module$Applications$server$habit_tracker$node_modules$moment$moment]=0}config._d=(config._useUTC?createUTCDate$$module$Applications$server$habit_tracker$node_modules$moment$moment:
createDate$$module$Applications$server$habit_tracker$node_modules$moment$moment).apply(null,input);expectedWeekday=config._useUTC?config._d.getUTCDay():config._d.getDay();if(config._tzm!=null)config._d.setUTCMinutes(config._d.getUTCMinutes()-config._tzm);if(config._nextDay)config._a[HOUR$$module$Applications$server$habit_tracker$node_modules$moment$moment]=24;if(config._w&&typeof config._w.d!=="undefined"&&config._w.d!==expectedWeekday)getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(config).weekdayMismatch=
true}
function dayOfYearFromWeekInfo$$module$Applications$server$habit_tracker$node_modules$moment$moment(config){var w;var weekYear;var week;var weekday;var dow;var doy;var temp;var weekdayOverflow;w=config._w;if(w.GG!=null||w.W!=null||w.E!=null){dow=1;doy=4;weekYear=defaults$$module$Applications$server$habit_tracker$node_modules$moment$moment(w.GG,config._a[YEAR$$module$Applications$server$habit_tracker$node_modules$moment$moment],weekOfYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(createLocal$$module$Applications$server$habit_tracker$node_modules$moment$moment(),1,
4).year);week=defaults$$module$Applications$server$habit_tracker$node_modules$moment$moment(w.W,1);weekday=defaults$$module$Applications$server$habit_tracker$node_modules$moment$moment(w.E,1);if(weekday<1||weekday>7)weekdayOverflow=true}else{dow=config._locale._week.dow;doy=config._locale._week.doy;var curWeek=weekOfYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(createLocal$$module$Applications$server$habit_tracker$node_modules$moment$moment(),dow,doy);weekYear=defaults$$module$Applications$server$habit_tracker$node_modules$moment$moment(w.gg,
config._a[YEAR$$module$Applications$server$habit_tracker$node_modules$moment$moment],curWeek.year);week=defaults$$module$Applications$server$habit_tracker$node_modules$moment$moment(w.w,curWeek.week);if(w.d!=null){weekday=w.d;if(weekday<0||weekday>6)weekdayOverflow=true}else if(w.e!=null){weekday=w.e+dow;if(w.e<0||w.e>6)weekdayOverflow=true}else weekday=dow}if(week<1||week>weeksInYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(weekYear,dow,doy))getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(config)._overflowWeeks=
true;else if(weekdayOverflow!=null)getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(config)._overflowWeekday=true;else{temp=dayOfYearFromWeeks$$module$Applications$server$habit_tracker$node_modules$moment$moment(weekYear,week,weekday,dow,doy);config._a[YEAR$$module$Applications$server$habit_tracker$node_modules$moment$moment]=temp.year;config._dayOfYear=temp.dayOfYear}}var extendedIsoRegex$$module$Applications$server$habit_tracker$node_modules$moment$moment=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
var basicIsoRegex$$module$Applications$server$habit_tracker$node_modules$moment$moment=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;var tzRegex$$module$Applications$server$habit_tracker$node_modules$moment$moment=/Z|[+-]\d\d(?::?\d\d)?/;
var isoDates$$module$Applications$server$habit_tracker$node_modules$moment$moment=[["YYYYYY-MM-DD",/[+-]\d{6}-\d\d-\d\d/],["YYYY-MM-DD",/\d{4}-\d\d-\d\d/],["GGGG-[W]WW-E",/\d{4}-W\d\d-\d/],["GGGG-[W]WW",/\d{4}-W\d\d/,false],["YYYY-DDD",/\d{4}-\d{3}/],["YYYY-MM",/\d{4}-\d\d/,false],["YYYYYYMMDD",/[+-]\d{10}/],["YYYYMMDD",/\d{8}/],["GGGG[W]WWE",/\d{4}W\d{3}/],["GGGG[W]WW",/\d{4}W\d{2}/,false],["YYYYDDD",/\d{7}/]];
var isoTimes$$module$Applications$server$habit_tracker$node_modules$moment$moment=[["HH:mm:ss.SSSS",/\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss,SSSS",/\d\d:\d\d:\d\d,\d+/],["HH:mm:ss",/\d\d:\d\d:\d\d/],["HH:mm",/\d\d:\d\d/],["HHmmss.SSSS",/\d\d\d\d\d\d\.\d+/],["HHmmss,SSSS",/\d\d\d\d\d\d,\d+/],["HHmmss",/\d\d\d\d\d\d/],["HHmm",/\d\d\d\d/],["HH",/\d\d/]];var aspNetJsonRegex$$module$Applications$server$habit_tracker$node_modules$moment$moment=/^\/?Date\((\-?\d+)/i;
function configFromISO$$module$Applications$server$habit_tracker$node_modules$moment$moment(config){var i;var l;var string=config._i;var match=extendedIsoRegex$$module$Applications$server$habit_tracker$node_modules$moment$moment.exec(string)||basicIsoRegex$$module$Applications$server$habit_tracker$node_modules$moment$moment.exec(string);var allowTime;var dateFormat;var timeFormat;var tzFormat;if(match){getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(config).iso=
true;for(i=0,l=isoDates$$module$Applications$server$habit_tracker$node_modules$moment$moment.length;i<l;i++)if(isoDates$$module$Applications$server$habit_tracker$node_modules$moment$moment[i][1].exec(match[1])){dateFormat=isoDates$$module$Applications$server$habit_tracker$node_modules$moment$moment[i][0];allowTime=isoDates$$module$Applications$server$habit_tracker$node_modules$moment$moment[i][2]!==false;break}if(dateFormat==null){config._isValid=false;return}if(match[3]){for(i=0,l=isoTimes$$module$Applications$server$habit_tracker$node_modules$moment$moment.length;i<
l;i++)if(isoTimes$$module$Applications$server$habit_tracker$node_modules$moment$moment[i][1].exec(match[3])){timeFormat=(match[2]||" ")+isoTimes$$module$Applications$server$habit_tracker$node_modules$moment$moment[i][0];break}if(timeFormat==null){config._isValid=false;return}}if(!allowTime&&timeFormat!=null){config._isValid=false;return}if(match[4])if(tzRegex$$module$Applications$server$habit_tracker$node_modules$moment$moment.exec(match[4]))tzFormat="Z";else{config._isValid=false;return}config._f=
dateFormat+(timeFormat||"")+(tzFormat||"");configFromStringAndFormat$$module$Applications$server$habit_tracker$node_modules$moment$moment(config)}else config._isValid=false}var rfc2822$$module$Applications$server$habit_tracker$node_modules$moment$moment=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;
function extractFromRFC2822Strings$$module$Applications$server$habit_tracker$node_modules$moment$moment(yearStr,monthStr,dayStr,hourStr,minuteStr,secondStr){var result=[untruncateYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(yearStr),defaultLocaleMonthsShort$$module$Applications$server$habit_tracker$node_modules$moment$moment.indexOf(monthStr),parseInt(dayStr,10),parseInt(hourStr,10),parseInt(minuteStr,10)];if(secondStr)result.push(parseInt(secondStr,10));return result}
function untruncateYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(yearStr){var year=parseInt(yearStr,10);if(year<=49)return 2E3+year;else if(year<=999)return 1900+year;return year}function preprocessRFC2822$$module$Applications$server$habit_tracker$node_modules$moment$moment(s){return s.replace(/\([^)]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").replace(/^\s\s*/,"").replace(/\s\s*$/,"")}
function checkWeekday$$module$Applications$server$habit_tracker$node_modules$moment$moment(weekdayStr,parsedInput,config){if(weekdayStr){var weekdayProvided=defaultLocaleWeekdaysShort$$module$Applications$server$habit_tracker$node_modules$moment$moment.indexOf(weekdayStr);var weekdayActual=(new Date(parsedInput[0],parsedInput[1],parsedInput[2])).getDay();if(weekdayProvided!==weekdayActual){getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(config).weekdayMismatch=
true;config._isValid=false;return false}}return true}var obsOffsets$$module$Applications$server$habit_tracker$node_modules$moment$moment={UT:0,GMT:0,EDT:-4*60,EST:-5*60,CDT:-5*60,CST:-6*60,MDT:-6*60,MST:-7*60,PDT:-7*60,PST:-8*60};
function calculateOffset$$module$Applications$server$habit_tracker$node_modules$moment$moment(obsOffset,militaryOffset,numOffset){if(obsOffset)return obsOffsets$$module$Applications$server$habit_tracker$node_modules$moment$moment[obsOffset];else if(militaryOffset)return 0;else{var hm=parseInt(numOffset,10);var m=hm%100;var h=(hm-m)/100;return h*60+m}}
function configFromRFC2822$$module$Applications$server$habit_tracker$node_modules$moment$moment(config){var match=rfc2822$$module$Applications$server$habit_tracker$node_modules$moment$moment.exec(preprocessRFC2822$$module$Applications$server$habit_tracker$node_modules$moment$moment(config._i));if(match){var parsedArray=extractFromRFC2822Strings$$module$Applications$server$habit_tracker$node_modules$moment$moment(match[4],match[3],match[2],match[5],match[6],match[7]);if(!checkWeekday$$module$Applications$server$habit_tracker$node_modules$moment$moment(match[1],
parsedArray,config))return;config._a=parsedArray;config._tzm=calculateOffset$$module$Applications$server$habit_tracker$node_modules$moment$moment(match[8],match[9],match[10]);config._d=createUTCDate$$module$Applications$server$habit_tracker$node_modules$moment$moment.apply(null,config._a);config._d.setUTCMinutes(config._d.getUTCMinutes()-config._tzm);getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(config).rfc2822=true}else config._isValid=false}
function configFromString$$module$Applications$server$habit_tracker$node_modules$moment$moment(config){var matched=aspNetJsonRegex$$module$Applications$server$habit_tracker$node_modules$moment$moment.exec(config._i);if(matched!==null){config._d=new Date(+matched[1]);return}configFromISO$$module$Applications$server$habit_tracker$node_modules$moment$moment(config);if(config._isValid===false)delete config._isValid;else return;configFromRFC2822$$module$Applications$server$habit_tracker$node_modules$moment$moment(config);
if(config._isValid===false)delete config._isValid;else return;hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.createFromInputFallback(config)}
hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.createFromInputFallback=deprecate$$module$Applications$server$habit_tracker$node_modules$moment$moment("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), "+"which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are "+"discouraged and will be removed in an upcoming major release. Please refer to "+"http://momentjs.com/guides/#/warnings/js-date/ for more info.",
function(config){config._d=new Date(config._i+(config._useUTC?" UTC":""))});hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.ISO_8601=function(){};hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.RFC_2822=function(){};
function configFromStringAndFormat$$module$Applications$server$habit_tracker$node_modules$moment$moment(config){if(config._f===hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.ISO_8601){configFromISO$$module$Applications$server$habit_tracker$node_modules$moment$moment(config);return}if(config._f===hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.RFC_2822){configFromRFC2822$$module$Applications$server$habit_tracker$node_modules$moment$moment(config);
return}config._a=[];getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(config).empty=true;var string=""+config._i;var i;var parsedInput;var tokens;var token;var skipped;var stringLength=string.length;var totalParsedInputLength=0;tokens=expandFormat$$module$Applications$server$habit_tracker$node_modules$moment$moment(config._f,config._locale).match(formattingTokens$$module$Applications$server$habit_tracker$node_modules$moment$moment)||[];for(i=0;i<tokens.length;i++){token=
tokens[i];parsedInput=(string.match(getParseRegexForToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(token,config))||[])[0];if(parsedInput){skipped=string.substr(0,string.indexOf(parsedInput));if(skipped.length>0)getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(config).unusedInput.push(skipped);string=string.slice(string.indexOf(parsedInput)+parsedInput.length);totalParsedInputLength+=parsedInput.length}if(formatTokenFunctions$$module$Applications$server$habit_tracker$node_modules$moment$moment[token]){if(parsedInput)getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(config).empty=
false;else getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(config).unusedTokens.push(token);addTimeToArrayFromToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(token,parsedInput,config)}else if(config._strict&&!parsedInput)getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(config).unusedTokens.push(token)}getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(config).charsLeftOver=
stringLength-totalParsedInputLength;if(string.length>0)getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(config).unusedInput.push(string);if(config._a[HOUR$$module$Applications$server$habit_tracker$node_modules$moment$moment]<=12&&getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(config).bigHour===true&&config._a[HOUR$$module$Applications$server$habit_tracker$node_modules$moment$moment]>0)getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(config).bigHour=
undefined;getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(config).parsedDateParts=config._a.slice(0);getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(config).meridiem=config._meridiem;config._a[HOUR$$module$Applications$server$habit_tracker$node_modules$moment$moment]=meridiemFixWrap$$module$Applications$server$habit_tracker$node_modules$moment$moment(config._locale,config._a[HOUR$$module$Applications$server$habit_tracker$node_modules$moment$moment],
config._meridiem);configFromArray$$module$Applications$server$habit_tracker$node_modules$moment$moment(config);checkOverflow$$module$Applications$server$habit_tracker$node_modules$moment$moment(config)}
function meridiemFixWrap$$module$Applications$server$habit_tracker$node_modules$moment$moment(locale,hour,meridiem){var isPm;if(meridiem==null)return hour;if(locale.meridiemHour!=null)return locale.meridiemHour(hour,meridiem);else if(locale.isPM!=null){isPm=locale.isPM(meridiem);if(isPm&&hour<12)hour+=12;if(!isPm&&hour===12)hour=0;return hour}else return hour}
function configFromStringAndArray$$module$Applications$server$habit_tracker$node_modules$moment$moment(config){var tempConfig;var bestMoment;var scoreToBeat;var i;var currentScore;if(config._f.length===0){getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(config).invalidFormat=true;config._d=new Date(NaN);return}for(i=0;i<config._f.length;i++){currentScore=0;tempConfig=copyConfig$$module$Applications$server$habit_tracker$node_modules$moment$moment({},config);if(config._useUTC!=
null)tempConfig._useUTC=config._useUTC;tempConfig._f=config._f[i];configFromStringAndFormat$$module$Applications$server$habit_tracker$node_modules$moment$moment(tempConfig);if(!isValid$$module$Applications$server$habit_tracker$node_modules$moment$moment(tempConfig))continue;currentScore+=getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(tempConfig).charsLeftOver;currentScore+=getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(tempConfig).unusedTokens.length*
10;getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(tempConfig).score=currentScore;if(scoreToBeat==null||currentScore<scoreToBeat){scoreToBeat=currentScore;bestMoment=tempConfig}}extend$$module$Applications$server$habit_tracker$node_modules$moment$moment(config,bestMoment||tempConfig)}
function configFromObject$$module$Applications$server$habit_tracker$node_modules$moment$moment(config){if(config._d)return;var i=normalizeObjectUnits$$module$Applications$server$habit_tracker$node_modules$moment$moment(config._i);config._a=map$$module$Applications$server$habit_tracker$node_modules$moment$moment([i.year,i.month,i.day||i.date,i.hour,i.minute,i.second,i.millisecond],function(obj){return obj&&parseInt(obj,10)});configFromArray$$module$Applications$server$habit_tracker$node_modules$moment$moment(config)}
function createFromConfig$$module$Applications$server$habit_tracker$node_modules$moment$moment(config){var res=new Moment$$module$Applications$server$habit_tracker$node_modules$moment$moment(checkOverflow$$module$Applications$server$habit_tracker$node_modules$moment$moment(prepareConfig$$module$Applications$server$habit_tracker$node_modules$moment$moment(config)));if(res._nextDay){res.add(1,"d");res._nextDay=undefined}return res}
function prepareConfig$$module$Applications$server$habit_tracker$node_modules$moment$moment(config){var input=config._i;var format=config._f;config._locale=config._locale||getLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment(config._l);if(input===null||format===undefined&&input==="")return createInvalid$$module$Applications$server$habit_tracker$node_modules$moment$moment({nullInput:true});if(typeof input==="string")config._i=input=config._locale.preparse(input);if(isMoment$$module$Applications$server$habit_tracker$node_modules$moment$moment(input))return new Moment$$module$Applications$server$habit_tracker$node_modules$moment$moment(checkOverflow$$module$Applications$server$habit_tracker$node_modules$moment$moment(input));
else if(isDate$$module$Applications$server$habit_tracker$node_modules$moment$moment(input))config._d=input;else if(isArray$$module$Applications$server$habit_tracker$node_modules$moment$moment(format))configFromStringAndArray$$module$Applications$server$habit_tracker$node_modules$moment$moment(config);else if(format)configFromStringAndFormat$$module$Applications$server$habit_tracker$node_modules$moment$moment(config);else configFromInput$$module$Applications$server$habit_tracker$node_modules$moment$moment(config);
if(!isValid$$module$Applications$server$habit_tracker$node_modules$moment$moment(config))config._d=null;return config}
function configFromInput$$module$Applications$server$habit_tracker$node_modules$moment$moment(config){var input=config._i;if(isUndefined$$module$Applications$server$habit_tracker$node_modules$moment$moment(input))config._d=new Date(hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.now());else if(isDate$$module$Applications$server$habit_tracker$node_modules$moment$moment(input))config._d=new Date(input.valueOf());else if(typeof input==="string")configFromString$$module$Applications$server$habit_tracker$node_modules$moment$moment(config);
else if(isArray$$module$Applications$server$habit_tracker$node_modules$moment$moment(input)){config._a=map$$module$Applications$server$habit_tracker$node_modules$moment$moment(input.slice(0),function(obj){return parseInt(obj,10)});configFromArray$$module$Applications$server$habit_tracker$node_modules$moment$moment(config)}else if(isObject$$module$Applications$server$habit_tracker$node_modules$moment$moment(input))configFromObject$$module$Applications$server$habit_tracker$node_modules$moment$moment(config);
else if(isNumber$$module$Applications$server$habit_tracker$node_modules$moment$moment(input))config._d=new Date(input);else hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.createFromInputFallback(config)}
function createLocalOrUTC$$module$Applications$server$habit_tracker$node_modules$moment$moment(input,format,locale,strict,isUTC){var c={};if(locale===true||locale===false){strict=locale;locale=undefined}if(isObject$$module$Applications$server$habit_tracker$node_modules$moment$moment(input)&&isObjectEmpty$$module$Applications$server$habit_tracker$node_modules$moment$moment(input)||isArray$$module$Applications$server$habit_tracker$node_modules$moment$moment(input)&&input.length===0)input=undefined;
c._isAMomentObject=true;c._useUTC=c._isUTC=isUTC;c._l=locale;c._i=input;c._f=format;c._strict=strict;return createFromConfig$$module$Applications$server$habit_tracker$node_modules$moment$moment(c)}function createLocal$$module$Applications$server$habit_tracker$node_modules$moment$moment(input,format,locale,strict){return createLocalOrUTC$$module$Applications$server$habit_tracker$node_modules$moment$moment(input,format,locale,strict,false)}
var prototypeMin$$module$Applications$server$habit_tracker$node_modules$moment$moment=deprecate$$module$Applications$server$habit_tracker$node_modules$moment$moment("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",function(){var other=createLocal$$module$Applications$server$habit_tracker$node_modules$moment$moment.apply(null,arguments);if(this.isValid()&&other.isValid())return other<this?this:other;else return createInvalid$$module$Applications$server$habit_tracker$node_modules$moment$moment()});
var prototypeMax$$module$Applications$server$habit_tracker$node_modules$moment$moment=deprecate$$module$Applications$server$habit_tracker$node_modules$moment$moment("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",function(){var other=createLocal$$module$Applications$server$habit_tracker$node_modules$moment$moment.apply(null,arguments);if(this.isValid()&&other.isValid())return other>this?this:other;else return createInvalid$$module$Applications$server$habit_tracker$node_modules$moment$moment()});
function pickBy$$module$Applications$server$habit_tracker$node_modules$moment$moment(fn,moments){var res;var i;if(moments.length===1&&isArray$$module$Applications$server$habit_tracker$node_modules$moment$moment(moments[0]))moments=moments[0];if(!moments.length)return createLocal$$module$Applications$server$habit_tracker$node_modules$moment$moment();res=moments[0];for(i=1;i<moments.length;++i)if(!moments[i].isValid()||moments[i][fn](res))res=moments[i];return res}
function min$$module$Applications$server$habit_tracker$node_modules$moment$moment(){var args=[].slice.call(arguments,0);return pickBy$$module$Applications$server$habit_tracker$node_modules$moment$moment("isBefore",args)}function max$$module$Applications$server$habit_tracker$node_modules$moment$moment(){var args=[].slice.call(arguments,0);return pickBy$$module$Applications$server$habit_tracker$node_modules$moment$moment("isAfter",args)}
var now$$module$Applications$server$habit_tracker$node_modules$moment$moment=function(){return Date.now?Date.now():+new Date};var ordering$$module$Applications$server$habit_tracker$node_modules$moment$moment=["year","quarter","month","week","day","hour","minute","second","millisecond"];
function isDurationValid$$module$Applications$server$habit_tracker$node_modules$moment$moment(m){for(var key in m)if(!(indexOf$$module$Applications$server$habit_tracker$node_modules$moment$moment.call(ordering$$module$Applications$server$habit_tracker$node_modules$moment$moment,key)!==-1&&(m[key]==null||!isNaN(m[key]))))return false;var unitHasDecimal=false;for(var i=0;i<ordering$$module$Applications$server$habit_tracker$node_modules$moment$moment.length;++i)if(m[ordering$$module$Applications$server$habit_tracker$node_modules$moment$moment[i]]){if(unitHasDecimal)return false;
if(parseFloat(m[ordering$$module$Applications$server$habit_tracker$node_modules$moment$moment[i]])!==toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(m[ordering$$module$Applications$server$habit_tracker$node_modules$moment$moment[i]]))unitHasDecimal=true}return true}function isValid$1$$module$Applications$server$habit_tracker$node_modules$moment$moment(){return this._isValid}
function createInvalid$1$$module$Applications$server$habit_tracker$node_modules$moment$moment(){return createDuration$$module$Applications$server$habit_tracker$node_modules$moment$moment(NaN)}
function Duration$$module$Applications$server$habit_tracker$node_modules$moment$moment(duration){var normalizedInput=normalizeObjectUnits$$module$Applications$server$habit_tracker$node_modules$moment$moment(duration);var years=normalizedInput.year||0;var quarters=normalizedInput.quarter||0;var months=normalizedInput.month||0;var weeks=normalizedInput.week||0;var days=normalizedInput.day||0;var hours=normalizedInput.hour||0;var minutes=normalizedInput.minute||0;var seconds=normalizedInput.second||
0;var milliseconds=normalizedInput.millisecond||0;this._isValid=isDurationValid$$module$Applications$server$habit_tracker$node_modules$moment$moment(normalizedInput);this._milliseconds=+milliseconds+seconds*1E3+minutes*6E4+hours*1E3*60*60;this._days=+days+weeks*7;this._months=+months+quarters*3+years*12;this._data={};this._locale=getLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment();this._bubble()}
function isDuration$$module$Applications$server$habit_tracker$node_modules$moment$moment(obj){return obj instanceof Duration$$module$Applications$server$habit_tracker$node_modules$moment$moment}function absRound$$module$Applications$server$habit_tracker$node_modules$moment$moment(number){if(number<0)return Math.round(-1*number)*-1;else return Math.round(number)}
function offset$$module$Applications$server$habit_tracker$node_modules$moment$moment(token,separator){addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(token,0,0,function(){var offset=this.utcOffset();var sign="+";if(offset<0){offset=-offset;sign="-"}return sign+zeroFill$$module$Applications$server$habit_tracker$node_modules$moment$moment(~~(offset/60),2)+separator+zeroFill$$module$Applications$server$habit_tracker$node_modules$moment$moment(~~offset%60,2)})}
offset$$module$Applications$server$habit_tracker$node_modules$moment$moment("Z",":");offset$$module$Applications$server$habit_tracker$node_modules$moment$moment("ZZ","");addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("Z",matchShortOffset$$module$Applications$server$habit_tracker$node_modules$moment$moment);addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("ZZ",matchShortOffset$$module$Applications$server$habit_tracker$node_modules$moment$moment);
addParseToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(["Z","ZZ"],function(input,array,config){config._useUTC=true;config._tzm=offsetFromString$$module$Applications$server$habit_tracker$node_modules$moment$moment(matchShortOffset$$module$Applications$server$habit_tracker$node_modules$moment$moment,input)});var chunkOffset$$module$Applications$server$habit_tracker$node_modules$moment$moment=/([\+\-]|\d\d)/gi;
function offsetFromString$$module$Applications$server$habit_tracker$node_modules$moment$moment(matcher,string){var matches=(string||"").match(matcher);if(matches===null)return null;var chunk=matches[matches.length-1]||[];var parts=(chunk+"").match(chunkOffset$$module$Applications$server$habit_tracker$node_modules$moment$moment)||["-",0,0];var minutes=+(parts[1]*60)+toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(parts[2]);return minutes===0?0:parts[0]==="+"?minutes:-minutes}
function cloneWithOffset$$module$Applications$server$habit_tracker$node_modules$moment$moment(input,model){var res;var diff;if(model._isUTC){res=model.clone();diff=(isMoment$$module$Applications$server$habit_tracker$node_modules$moment$moment(input)||isDate$$module$Applications$server$habit_tracker$node_modules$moment$moment(input)?input.valueOf():createLocal$$module$Applications$server$habit_tracker$node_modules$moment$moment(input).valueOf())-res.valueOf();res._d.setTime(res._d.valueOf()+diff);
hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.updateOffset(res,false);return res}else return createLocal$$module$Applications$server$habit_tracker$node_modules$moment$moment(input).local()}function getDateOffset$$module$Applications$server$habit_tracker$node_modules$moment$moment(m){return-Math.round(m._d.getTimezoneOffset()/15)*15}hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.updateOffset=function(){};
function getSetOffset$$module$Applications$server$habit_tracker$node_modules$moment$moment(input,keepLocalTime,keepMinutes){var offset=this._offset||0;var localAdjust;if(!this.isValid())return input!=null?this:NaN;if(input!=null){if(typeof input==="string"){input=offsetFromString$$module$Applications$server$habit_tracker$node_modules$moment$moment(matchShortOffset$$module$Applications$server$habit_tracker$node_modules$moment$moment,input);if(input===null)return this}else if(Math.abs(input)<16&&!keepMinutes)input=
input*60;if(!this._isUTC&&keepLocalTime)localAdjust=getDateOffset$$module$Applications$server$habit_tracker$node_modules$moment$moment(this);this._offset=input;this._isUTC=true;if(localAdjust!=null)this.add(localAdjust,"m");if(offset!==input)if(!keepLocalTime||this._changeInProgress)addSubtract$$module$Applications$server$habit_tracker$node_modules$moment$moment(this,createDuration$$module$Applications$server$habit_tracker$node_modules$moment$moment(input-offset,"m"),1,false);else if(!this._changeInProgress){this._changeInProgress=
true;hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.updateOffset(this,true);this._changeInProgress=null}return this}else return this._isUTC?offset:getDateOffset$$module$Applications$server$habit_tracker$node_modules$moment$moment(this)}
function getSetZone$$module$Applications$server$habit_tracker$node_modules$moment$moment(input,keepLocalTime){if(input!=null){if(typeof input!=="string")input=-input;this.utcOffset(input,keepLocalTime);return this}else return-this.utcOffset()}function setOffsetToUTC$$module$Applications$server$habit_tracker$node_modules$moment$moment(keepLocalTime){return this.utcOffset(0,keepLocalTime)}
function setOffsetToLocal$$module$Applications$server$habit_tracker$node_modules$moment$moment(keepLocalTime){if(this._isUTC){this.utcOffset(0,keepLocalTime);this._isUTC=false;if(keepLocalTime)this.subtract(getDateOffset$$module$Applications$server$habit_tracker$node_modules$moment$moment(this),"m")}return this}
function setOffsetToParsedOffset$$module$Applications$server$habit_tracker$node_modules$moment$moment(){if(this._tzm!=null)this.utcOffset(this._tzm,false,true);else if(typeof this._i==="string"){var tZone=offsetFromString$$module$Applications$server$habit_tracker$node_modules$moment$moment(matchOffset$$module$Applications$server$habit_tracker$node_modules$moment$moment,this._i);if(tZone!=null)this.utcOffset(tZone);else this.utcOffset(0,true)}return this}
function hasAlignedHourOffset$$module$Applications$server$habit_tracker$node_modules$moment$moment(input){if(!this.isValid())return false;input=input?createLocal$$module$Applications$server$habit_tracker$node_modules$moment$moment(input).utcOffset():0;return(this.utcOffset()-input)%60===0}
function isDaylightSavingTime$$module$Applications$server$habit_tracker$node_modules$moment$moment(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()}
function isDaylightSavingTimeShifted$$module$Applications$server$habit_tracker$node_modules$moment$moment(){if(!isUndefined$$module$Applications$server$habit_tracker$node_modules$moment$moment(this._isDSTShifted))return this._isDSTShifted;var c={};copyConfig$$module$Applications$server$habit_tracker$node_modules$moment$moment(c,this);c=prepareConfig$$module$Applications$server$habit_tracker$node_modules$moment$moment(c);if(c._a){var other=c._isUTC?createUTC$$module$Applications$server$habit_tracker$node_modules$moment$moment(c._a):
createLocal$$module$Applications$server$habit_tracker$node_modules$moment$moment(c._a);this._isDSTShifted=this.isValid()&&compareArrays$$module$Applications$server$habit_tracker$node_modules$moment$moment(c._a,other.toArray())>0}else this._isDSTShifted=false;return this._isDSTShifted}function isLocal$$module$Applications$server$habit_tracker$node_modules$moment$moment(){return this.isValid()?!this._isUTC:false}
function isUtcOffset$$module$Applications$server$habit_tracker$node_modules$moment$moment(){return this.isValid()?this._isUTC:false}function isUtc$$module$Applications$server$habit_tracker$node_modules$moment$moment(){return this.isValid()?this._isUTC&&this._offset===0:false}var aspNetRegex$$module$Applications$server$habit_tracker$node_modules$moment$moment=/^(\-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/;var isoRegex$$module$Applications$server$habit_tracker$node_modules$moment$moment=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
function createDuration$$module$Applications$server$habit_tracker$node_modules$moment$moment(input,key){var duration=input;var match=null;var sign;var ret;var diffRes;if(isDuration$$module$Applications$server$habit_tracker$node_modules$moment$moment(input))duration={ms:input._milliseconds,d:input._days,M:input._months};else if(isNumber$$module$Applications$server$habit_tracker$node_modules$moment$moment(input)){duration={};if(key)duration[key]=input;else duration.milliseconds=input}else if(!!(match=
aspNetRegex$$module$Applications$server$habit_tracker$node_modules$moment$moment.exec(input))){sign=match[1]==="-"?-1:1;duration={y:0,d:toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(match[DATE$$module$Applications$server$habit_tracker$node_modules$moment$moment])*sign,h:toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(match[HOUR$$module$Applications$server$habit_tracker$node_modules$moment$moment])*sign,m:toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(match[MINUTE$$module$Applications$server$habit_tracker$node_modules$moment$moment])*
sign,s:toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(match[SECOND$$module$Applications$server$habit_tracker$node_modules$moment$moment])*sign,ms:toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(absRound$$module$Applications$server$habit_tracker$node_modules$moment$moment(match[MILLISECOND$$module$Applications$server$habit_tracker$node_modules$moment$moment]*1E3))*sign}}else if(!!(match=isoRegex$$module$Applications$server$habit_tracker$node_modules$moment$moment.exec(input))){sign=
match[1]==="-"?-1:match[1]==="+"?1:1;duration={y:parseIso$$module$Applications$server$habit_tracker$node_modules$moment$moment(match[2],sign),M:parseIso$$module$Applications$server$habit_tracker$node_modules$moment$moment(match[3],sign),w:parseIso$$module$Applications$server$habit_tracker$node_modules$moment$moment(match[4],sign),d:parseIso$$module$Applications$server$habit_tracker$node_modules$moment$moment(match[5],sign),h:parseIso$$module$Applications$server$habit_tracker$node_modules$moment$moment(match[6],
sign),m:parseIso$$module$Applications$server$habit_tracker$node_modules$moment$moment(match[7],sign),s:parseIso$$module$Applications$server$habit_tracker$node_modules$moment$moment(match[8],sign)}}else if(duration==null)duration={};else if(typeof duration==="object"&&("from"in duration||"to"in duration)){diffRes=momentsDifference$$module$Applications$server$habit_tracker$node_modules$moment$moment(createLocal$$module$Applications$server$habit_tracker$node_modules$moment$moment(duration.from),createLocal$$module$Applications$server$habit_tracker$node_modules$moment$moment(duration.to));
duration={};duration.ms=diffRes.milliseconds;duration.M=diffRes.months}ret=new Duration$$module$Applications$server$habit_tracker$node_modules$moment$moment(duration);if(isDuration$$module$Applications$server$habit_tracker$node_modules$moment$moment(input)&&hasOwnProp$$module$Applications$server$habit_tracker$node_modules$moment$moment(input,"_locale"))ret._locale=input._locale;return ret}createDuration$$module$Applications$server$habit_tracker$node_modules$moment$moment.fn=Duration$$module$Applications$server$habit_tracker$node_modules$moment$moment.prototype;
createDuration$$module$Applications$server$habit_tracker$node_modules$moment$moment.invalid=createInvalid$1$$module$Applications$server$habit_tracker$node_modules$moment$moment;function parseIso$$module$Applications$server$habit_tracker$node_modules$moment$moment(inp,sign){var res=inp&&parseFloat(inp.replace(",","."));return(isNaN(res)?0:res)*sign}
function positiveMomentsDifference$$module$Applications$server$habit_tracker$node_modules$moment$moment(base,other){var res={milliseconds:0,months:0};res.months=other.month()-base.month()+(other.year()-base.year())*12;if(base.clone().add(res.months,"M").isAfter(other))--res.months;res.milliseconds=+other-+base.clone().add(res.months,"M");return res}
function momentsDifference$$module$Applications$server$habit_tracker$node_modules$moment$moment(base,other){var res;if(!(base.isValid()&&other.isValid()))return{milliseconds:0,months:0};other=cloneWithOffset$$module$Applications$server$habit_tracker$node_modules$moment$moment(other,base);if(base.isBefore(other))res=positiveMomentsDifference$$module$Applications$server$habit_tracker$node_modules$moment$moment(base,other);else{res=positiveMomentsDifference$$module$Applications$server$habit_tracker$node_modules$moment$moment(other,
base);res.milliseconds=-res.milliseconds;res.months=-res.months}return res}
function createAdder$$module$Applications$server$habit_tracker$node_modules$moment$moment(direction,name){return function(val,period){var dur;var tmp;if(period!==null&&!isNaN(+period)){deprecateSimple$$module$Applications$server$habit_tracker$node_modules$moment$moment(name,"moment()."+name+"(period, number) is deprecated. Please use moment()."+name+"(number, period). "+"See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.");tmp=val;val=period;period=tmp}val=typeof val==="string"?
+val:val;dur=createDuration$$module$Applications$server$habit_tracker$node_modules$moment$moment(val,period);addSubtract$$module$Applications$server$habit_tracker$node_modules$moment$moment(this,dur,direction);return this}}
function addSubtract$$module$Applications$server$habit_tracker$node_modules$moment$moment(mom,duration,isAdding,updateOffset){var milliseconds=duration._milliseconds;var days=absRound$$module$Applications$server$habit_tracker$node_modules$moment$moment(duration._days);var months=absRound$$module$Applications$server$habit_tracker$node_modules$moment$moment(duration._months);if(!mom.isValid())return;updateOffset=updateOffset==null?true:updateOffset;if(months)setMonth$$module$Applications$server$habit_tracker$node_modules$moment$moment(mom,
get$$module$Applications$server$habit_tracker$node_modules$moment$moment(mom,"Month")+months*isAdding);if(days)set$1$$module$Applications$server$habit_tracker$node_modules$moment$moment(mom,"Date",get$$module$Applications$server$habit_tracker$node_modules$moment$moment(mom,"Date")+days*isAdding);if(milliseconds)mom._d.setTime(mom._d.valueOf()+milliseconds*isAdding);if(updateOffset)hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.updateOffset(mom,days||months)}
var add$$module$Applications$server$habit_tracker$node_modules$moment$moment=createAdder$$module$Applications$server$habit_tracker$node_modules$moment$moment(1,"add");var subtract$$module$Applications$server$habit_tracker$node_modules$moment$moment=createAdder$$module$Applications$server$habit_tracker$node_modules$moment$moment(-1,"subtract");
function getCalendarFormat$$module$Applications$server$habit_tracker$node_modules$moment$moment(myMoment,now){var diff=myMoment.diff(now,"days",true);return diff<-6?"sameElse":diff<-1?"lastWeek":diff<0?"lastDay":diff<1?"sameDay":diff<2?"nextDay":diff<7?"nextWeek":"sameElse"}
function calendar$1$$module$Applications$server$habit_tracker$node_modules$moment$moment(time,formats){var now=time||createLocal$$module$Applications$server$habit_tracker$node_modules$moment$moment();var sod=cloneWithOffset$$module$Applications$server$habit_tracker$node_modules$moment$moment(now,this).startOf("day");var format=hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.calendarFormat(this,sod)||"sameElse";var output=formats&&(isFunction$$module$Applications$server$habit_tracker$node_modules$moment$moment(formats[format])?
formats[format].call(this,now):formats[format]);return this.format(output||this.localeData().calendar(format,this,createLocal$$module$Applications$server$habit_tracker$node_modules$moment$moment(now)))}function clone$$module$Applications$server$habit_tracker$node_modules$moment$moment(){return new Moment$$module$Applications$server$habit_tracker$node_modules$moment$moment(this)}
function isAfter$$module$Applications$server$habit_tracker$node_modules$moment$moment(input,units){var localInput=isMoment$$module$Applications$server$habit_tracker$node_modules$moment$moment(input)?input:createLocal$$module$Applications$server$habit_tracker$node_modules$moment$moment(input);if(!(this.isValid()&&localInput.isValid()))return false;units=normalizeUnits$$module$Applications$server$habit_tracker$node_modules$moment$moment(!isUndefined$$module$Applications$server$habit_tracker$node_modules$moment$moment(units)?
units:"millisecond");if(units==="millisecond")return this.valueOf()>localInput.valueOf();else return localInput.valueOf()<this.clone().startOf(units).valueOf()}
function isBefore$$module$Applications$server$habit_tracker$node_modules$moment$moment(input,units){var localInput=isMoment$$module$Applications$server$habit_tracker$node_modules$moment$moment(input)?input:createLocal$$module$Applications$server$habit_tracker$node_modules$moment$moment(input);if(!(this.isValid()&&localInput.isValid()))return false;units=normalizeUnits$$module$Applications$server$habit_tracker$node_modules$moment$moment(!isUndefined$$module$Applications$server$habit_tracker$node_modules$moment$moment(units)?
units:"millisecond");if(units==="millisecond")return this.valueOf()<localInput.valueOf();else return this.clone().endOf(units).valueOf()<localInput.valueOf()}function isBetween$$module$Applications$server$habit_tracker$node_modules$moment$moment(from,to,units,inclusivity){inclusivity=inclusivity||"()";return(inclusivity[0]==="("?this.isAfter(from,units):!this.isBefore(from,units))&&(inclusivity[1]===")"?this.isBefore(to,units):!this.isAfter(to,units))}
function isSame$$module$Applications$server$habit_tracker$node_modules$moment$moment(input,units){var localInput=isMoment$$module$Applications$server$habit_tracker$node_modules$moment$moment(input)?input:createLocal$$module$Applications$server$habit_tracker$node_modules$moment$moment(input);var inputMs;if(!(this.isValid()&&localInput.isValid()))return false;units=normalizeUnits$$module$Applications$server$habit_tracker$node_modules$moment$moment(units||"millisecond");if(units==="millisecond")return this.valueOf()===
localInput.valueOf();else{inputMs=localInput.valueOf();return this.clone().startOf(units).valueOf()<=inputMs&&inputMs<=this.clone().endOf(units).valueOf()}}function isSameOrAfter$$module$Applications$server$habit_tracker$node_modules$moment$moment(input,units){return this.isSame(input,units)||this.isAfter(input,units)}function isSameOrBefore$$module$Applications$server$habit_tracker$node_modules$moment$moment(input,units){return this.isSame(input,units)||this.isBefore(input,units)}
function diff$$module$Applications$server$habit_tracker$node_modules$moment$moment(input,units,asFloat){var that;var zoneDelta;var output;if(!this.isValid())return NaN;that=cloneWithOffset$$module$Applications$server$habit_tracker$node_modules$moment$moment(input,this);if(!that.isValid())return NaN;zoneDelta=(that.utcOffset()-this.utcOffset())*6E4;units=normalizeUnits$$module$Applications$server$habit_tracker$node_modules$moment$moment(units);switch(units){case "year":output=monthDiff$$module$Applications$server$habit_tracker$node_modules$moment$moment(this,
that)/12;break;case "month":output=monthDiff$$module$Applications$server$habit_tracker$node_modules$moment$moment(this,that);break;case "quarter":output=monthDiff$$module$Applications$server$habit_tracker$node_modules$moment$moment(this,that)/3;break;case "second":output=(this-that)/1E3;break;case "minute":output=(this-that)/6E4;break;case "hour":output=(this-that)/36E5;break;case "day":output=(this-that-zoneDelta)/864E5;break;case "week":output=(this-that-zoneDelta)/6048E5;break;default:output=this-
that}return asFloat?output:absFloor$$module$Applications$server$habit_tracker$node_modules$moment$moment(output)}
function monthDiff$$module$Applications$server$habit_tracker$node_modules$moment$moment(a,b){var wholeMonthDiff=(b.year()-a.year())*12+(b.month()-a.month());var anchor=a.clone().add(wholeMonthDiff,"months");var anchor2;var adjust;if(b-anchor<0){anchor2=a.clone().add(wholeMonthDiff-1,"months");adjust=(b-anchor)/(anchor-anchor2)}else{anchor2=a.clone().add(wholeMonthDiff+1,"months");adjust=(b-anchor)/(anchor2-anchor)}return-(wholeMonthDiff+adjust)||0}
hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.defaultFormat="YYYY-MM-DDTHH:mm:ssZ";hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.defaultFormatUtc="YYYY-MM-DDTHH:mm:ss[Z]";function toString$$module$Applications$server$habit_tracker$node_modules$moment$moment(){return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")}
function toISOString$$module$Applications$server$habit_tracker$node_modules$moment$moment(keepOffset){if(!this.isValid())return null;var utc=keepOffset!==true;var m=utc?this.clone().utc():this;if(m.year()<0||m.year()>9999)return formatMoment$$module$Applications$server$habit_tracker$node_modules$moment$moment(m,utc?"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYYYY-MM-DD[T]HH:mm:ss.SSSZ");if(isFunction$$module$Applications$server$habit_tracker$node_modules$moment$moment(Date.prototype.toISOString))if(utc)return this.toDate().toISOString();
else return(new Date(this.valueOf()+this.utcOffset()*60*1E3)).toISOString().replace("Z",formatMoment$$module$Applications$server$habit_tracker$node_modules$moment$moment(m,"Z"));return formatMoment$$module$Applications$server$habit_tracker$node_modules$moment$moment(m,utc?"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYY-MM-DD[T]HH:mm:ss.SSSZ")}
function inspect$$module$Applications$server$habit_tracker$node_modules$moment$moment(){if(!this.isValid())return"moment.invalid(/* "+this._i+" */)";var func="moment";var zone="";if(!this.isLocal()){func=this.utcOffset()===0?"moment.utc":"moment.parseZone";zone="Z"}var prefix="["+func+'("]';var year=0<=this.year()&&this.year()<=9999?"YYYY":"YYYYYY";var datetime="-MM-DD[T]HH:mm:ss.SSS";var suffix=zone+'[")]';return this.format(prefix+year+datetime+suffix)}
function format$$module$Applications$server$habit_tracker$node_modules$moment$moment(inputString){if(!inputString)inputString=this.isUtc()?hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.defaultFormatUtc:hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.defaultFormat;var output=formatMoment$$module$Applications$server$habit_tracker$node_modules$moment$moment(this,inputString);return this.localeData().postformat(output)}
function from$$module$Applications$server$habit_tracker$node_modules$moment$moment(time,withoutSuffix){if(this.isValid()&&(isMoment$$module$Applications$server$habit_tracker$node_modules$moment$moment(time)&&time.isValid()||createLocal$$module$Applications$server$habit_tracker$node_modules$moment$moment(time).isValid()))return createDuration$$module$Applications$server$habit_tracker$node_modules$moment$moment({to:this,from:time}).locale(this.locale()).humanize(!withoutSuffix);else return this.localeData().invalidDate()}
function fromNow$$module$Applications$server$habit_tracker$node_modules$moment$moment(withoutSuffix){return this.from(createLocal$$module$Applications$server$habit_tracker$node_modules$moment$moment(),withoutSuffix)}
function to$$module$Applications$server$habit_tracker$node_modules$moment$moment(time,withoutSuffix){if(this.isValid()&&(isMoment$$module$Applications$server$habit_tracker$node_modules$moment$moment(time)&&time.isValid()||createLocal$$module$Applications$server$habit_tracker$node_modules$moment$moment(time).isValid()))return createDuration$$module$Applications$server$habit_tracker$node_modules$moment$moment({from:this,to:time}).locale(this.locale()).humanize(!withoutSuffix);else return this.localeData().invalidDate()}
function toNow$$module$Applications$server$habit_tracker$node_modules$moment$moment(withoutSuffix){return this.to(createLocal$$module$Applications$server$habit_tracker$node_modules$moment$moment(),withoutSuffix)}
function locale$$module$Applications$server$habit_tracker$node_modules$moment$moment(key){var newLocaleData;if(key===undefined)return this._locale._abbr;else{newLocaleData=getLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment(key);if(newLocaleData!=null)this._locale=newLocaleData;return this}}
var lang$$module$Applications$server$habit_tracker$node_modules$moment$moment=deprecate$$module$Applications$server$habit_tracker$node_modules$moment$moment("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",function(key){if(key===undefined)return this.localeData();else return this.locale(key)});
function localeData$$module$Applications$server$habit_tracker$node_modules$moment$moment(){return this._locale}
function startOf$$module$Applications$server$habit_tracker$node_modules$moment$moment(units){units=normalizeUnits$$module$Applications$server$habit_tracker$node_modules$moment$moment(units);switch(units){case "year":this.month(0);case "quarter":case "month":this.date(1);case "week":case "isoWeek":case "day":case "date":this.hours(0);case "hour":this.minutes(0);case "minute":this.seconds(0);case "second":this.milliseconds(0)}if(units==="week")this.weekday(0);if(units==="isoWeek")this.isoWeekday(1);
if(units==="quarter")this.month(Math.floor(this.month()/3)*3);return this}function endOf$$module$Applications$server$habit_tracker$node_modules$moment$moment(units){units=normalizeUnits$$module$Applications$server$habit_tracker$node_modules$moment$moment(units);if(units===undefined||units==="millisecond")return this;if(units==="date")units="day";return this.startOf(units).add(1,units==="isoWeek"?"week":units).subtract(1,"ms")}
function valueOf$$module$Applications$server$habit_tracker$node_modules$moment$moment(){return this._d.valueOf()-(this._offset||0)*6E4}function unix$$module$Applications$server$habit_tracker$node_modules$moment$moment(){return Math.floor(this.valueOf()/1E3)}function toDate$$module$Applications$server$habit_tracker$node_modules$moment$moment(){return new Date(this.valueOf())}
function toArray$$module$Applications$server$habit_tracker$node_modules$moment$moment(){var m=this;return[m.year(),m.month(),m.date(),m.hour(),m.minute(),m.second(),m.millisecond()]}function toObject$$module$Applications$server$habit_tracker$node_modules$moment$moment(){var m=this;return{years:m.year(),months:m.month(),date:m.date(),hours:m.hours(),minutes:m.minutes(),seconds:m.seconds(),milliseconds:m.milliseconds()}}
function toJSON$$module$Applications$server$habit_tracker$node_modules$moment$moment(){return this.isValid()?this.toISOString():null}function isValid$2$$module$Applications$server$habit_tracker$node_modules$moment$moment(){return isValid$$module$Applications$server$habit_tracker$node_modules$moment$moment(this)}
function parsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(){return extend$$module$Applications$server$habit_tracker$node_modules$moment$moment({},getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(this))}function invalidAt$$module$Applications$server$habit_tracker$node_modules$moment$moment(){return getParsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment(this).overflow}
function creationData$$module$Applications$server$habit_tracker$node_modules$moment$moment(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}}addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(0,["gg",2],0,function(){return this.weekYear()%100});addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(0,["GG",2],0,function(){return this.isoWeekYear()%100});
function addWeekYearFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(token,getter){addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(0,[token,token.length],0,getter)}addWeekYearFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("gggg","weekYear");addWeekYearFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("ggggg","weekYear");
addWeekYearFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("GGGG","isoWeekYear");addWeekYearFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("GGGGG","isoWeekYear");addUnitAlias$$module$Applications$server$habit_tracker$node_modules$moment$moment("weekYear","gg");addUnitAlias$$module$Applications$server$habit_tracker$node_modules$moment$moment("isoWeekYear","GG");
addUnitPriority$$module$Applications$server$habit_tracker$node_modules$moment$moment("weekYear",1);addUnitPriority$$module$Applications$server$habit_tracker$node_modules$moment$moment("isoWeekYear",1);addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("G",matchSigned$$module$Applications$server$habit_tracker$node_modules$moment$moment);addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("g",matchSigned$$module$Applications$server$habit_tracker$node_modules$moment$moment);
addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("GG",match1to2$$module$Applications$server$habit_tracker$node_modules$moment$moment,match2$$module$Applications$server$habit_tracker$node_modules$moment$moment);addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("gg",match1to2$$module$Applications$server$habit_tracker$node_modules$moment$moment,match2$$module$Applications$server$habit_tracker$node_modules$moment$moment);
addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("GGGG",match1to4$$module$Applications$server$habit_tracker$node_modules$moment$moment,match4$$module$Applications$server$habit_tracker$node_modules$moment$moment);addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("gggg",match1to4$$module$Applications$server$habit_tracker$node_modules$moment$moment,match4$$module$Applications$server$habit_tracker$node_modules$moment$moment);
addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("GGGGG",match1to6$$module$Applications$server$habit_tracker$node_modules$moment$moment,match6$$module$Applications$server$habit_tracker$node_modules$moment$moment);addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("ggggg",match1to6$$module$Applications$server$habit_tracker$node_modules$moment$moment,match6$$module$Applications$server$habit_tracker$node_modules$moment$moment);
addWeekParseToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(["gggg","ggggg","GGGG","GGGGG"],function(input,week,config,token){week[token.substr(0,2)]=toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(input)});addWeekParseToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(["gg","GG"],function(input,week,config,token){week[token]=hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.parseTwoDigitYear(input)});
function getSetWeekYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(input){return getSetWeekYearHelper$$module$Applications$server$habit_tracker$node_modules$moment$moment.call(this,input,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)}
function getSetISOWeekYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(input){return getSetWeekYearHelper$$module$Applications$server$habit_tracker$node_modules$moment$moment.call(this,input,this.isoWeek(),this.isoWeekday(),1,4)}function getISOWeeksInYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(){return weeksInYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(this.year(),1,4)}
function getWeeksInYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(){var weekInfo=this.localeData()._week;return weeksInYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(this.year(),weekInfo.dow,weekInfo.doy)}
function getSetWeekYearHelper$$module$Applications$server$habit_tracker$node_modules$moment$moment(input,week,weekday,dow,doy){var weeksTarget;if(input==null)return weekOfYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(this,dow,doy).year;else{weeksTarget=weeksInYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(input,dow,doy);if(week>weeksTarget)week=weeksTarget;return setWeekAll$$module$Applications$server$habit_tracker$node_modules$moment$moment.call(this,
input,week,weekday,dow,doy)}}
function setWeekAll$$module$Applications$server$habit_tracker$node_modules$moment$moment(weekYear,week,weekday,dow,doy){var dayOfYearData=dayOfYearFromWeeks$$module$Applications$server$habit_tracker$node_modules$moment$moment(weekYear,week,weekday,dow,doy);var date=createUTCDate$$module$Applications$server$habit_tracker$node_modules$moment$moment(dayOfYearData.year,0,dayOfYearData.dayOfYear);this.year(date.getUTCFullYear());this.month(date.getUTCMonth());this.date(date.getUTCDate());return this}
addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("Q",0,"Qo","quarter");addUnitAlias$$module$Applications$server$habit_tracker$node_modules$moment$moment("quarter","Q");addUnitPriority$$module$Applications$server$habit_tracker$node_modules$moment$moment("quarter",7);addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("Q",match1$$module$Applications$server$habit_tracker$node_modules$moment$moment);
addParseToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("Q",function(input,array){array[MONTH$$module$Applications$server$habit_tracker$node_modules$moment$moment]=(toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(input)-1)*3});function getSetQuarter$$module$Applications$server$habit_tracker$node_modules$moment$moment(input){return input==null?Math.ceil((this.month()+1)/3):this.month((input-1)*3+this.month()%3)}
addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("D",["DD",2],"Do","date");addUnitAlias$$module$Applications$server$habit_tracker$node_modules$moment$moment("date","D");addUnitPriority$$module$Applications$server$habit_tracker$node_modules$moment$moment("date",9);addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("D",match1to2$$module$Applications$server$habit_tracker$node_modules$moment$moment);
addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("DD",match1to2$$module$Applications$server$habit_tracker$node_modules$moment$moment,match2$$module$Applications$server$habit_tracker$node_modules$moment$moment);addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("Do",function(isStrict,locale){return isStrict?locale._dayOfMonthOrdinalParse||locale._ordinalParse:locale._dayOfMonthOrdinalParseLenient});
addParseToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(["D","DD"],DATE$$module$Applications$server$habit_tracker$node_modules$moment$moment);addParseToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("Do",function(input,array){array[DATE$$module$Applications$server$habit_tracker$node_modules$moment$moment]=toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(input.match(match1to2$$module$Applications$server$habit_tracker$node_modules$moment$moment)[0])});
var getSetDayOfMonth$$module$Applications$server$habit_tracker$node_modules$moment$moment=makeGetSet$$module$Applications$server$habit_tracker$node_modules$moment$moment("Date",true);addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("DDD",["DDDD",3],"DDDo","dayOfYear");addUnitAlias$$module$Applications$server$habit_tracker$node_modules$moment$moment("dayOfYear","DDD");
addUnitPriority$$module$Applications$server$habit_tracker$node_modules$moment$moment("dayOfYear",4);addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("DDD",match1to3$$module$Applications$server$habit_tracker$node_modules$moment$moment);addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("DDDD",match3$$module$Applications$server$habit_tracker$node_modules$moment$moment);
addParseToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(["DDD","DDDD"],function(input,array,config){config._dayOfYear=toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(input)});function getSetDayOfYear$$module$Applications$server$habit_tracker$node_modules$moment$moment(input){var dayOfYear=Math.round((this.clone().startOf("day")-this.clone().startOf("year"))/864E5)+1;return input==null?dayOfYear:this.add(input-dayOfYear,"d")}
addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("m",["mm",2],0,"minute");addUnitAlias$$module$Applications$server$habit_tracker$node_modules$moment$moment("minute","m");addUnitPriority$$module$Applications$server$habit_tracker$node_modules$moment$moment("minute",14);addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("m",match1to2$$module$Applications$server$habit_tracker$node_modules$moment$moment);
addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("mm",match1to2$$module$Applications$server$habit_tracker$node_modules$moment$moment,match2$$module$Applications$server$habit_tracker$node_modules$moment$moment);addParseToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(["m","mm"],MINUTE$$module$Applications$server$habit_tracker$node_modules$moment$moment);
var getSetMinute$$module$Applications$server$habit_tracker$node_modules$moment$moment=makeGetSet$$module$Applications$server$habit_tracker$node_modules$moment$moment("Minutes",false);addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("s",["ss",2],0,"second");addUnitAlias$$module$Applications$server$habit_tracker$node_modules$moment$moment("second","s");addUnitPriority$$module$Applications$server$habit_tracker$node_modules$moment$moment("second",15);
addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("s",match1to2$$module$Applications$server$habit_tracker$node_modules$moment$moment);addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("ss",match1to2$$module$Applications$server$habit_tracker$node_modules$moment$moment,match2$$module$Applications$server$habit_tracker$node_modules$moment$moment);
addParseToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(["s","ss"],SECOND$$module$Applications$server$habit_tracker$node_modules$moment$moment);var getSetSecond$$module$Applications$server$habit_tracker$node_modules$moment$moment=makeGetSet$$module$Applications$server$habit_tracker$node_modules$moment$moment("Seconds",false);addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("S",0,0,function(){return~~(this.millisecond()/100)});
addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(0,["SS",2],0,function(){return~~(this.millisecond()/10)});addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(0,["SSS",3],0,"millisecond");addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(0,["SSSS",4],0,function(){return this.millisecond()*10});
addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(0,["SSSSS",5],0,function(){return this.millisecond()*100});addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(0,["SSSSSS",6],0,function(){return this.millisecond()*1E3});addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(0,["SSSSSSS",7],0,function(){return this.millisecond()*1E4});
addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(0,["SSSSSSSS",8],0,function(){return this.millisecond()*1E5});addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(0,["SSSSSSSSS",9],0,function(){return this.millisecond()*1E6});addUnitAlias$$module$Applications$server$habit_tracker$node_modules$moment$moment("millisecond","ms");addUnitPriority$$module$Applications$server$habit_tracker$node_modules$moment$moment("millisecond",16);
addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("S",match1to3$$module$Applications$server$habit_tracker$node_modules$moment$moment,match1$$module$Applications$server$habit_tracker$node_modules$moment$moment);addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("SS",match1to3$$module$Applications$server$habit_tracker$node_modules$moment$moment,match2$$module$Applications$server$habit_tracker$node_modules$moment$moment);
addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("SSS",match1to3$$module$Applications$server$habit_tracker$node_modules$moment$moment,match3$$module$Applications$server$habit_tracker$node_modules$moment$moment);var token$$module$Applications$server$habit_tracker$node_modules$moment$moment;
for(token$$module$Applications$server$habit_tracker$node_modules$moment$moment="SSSS";token$$module$Applications$server$habit_tracker$node_modules$moment$moment.length<=9;token$$module$Applications$server$habit_tracker$node_modules$moment$moment+="S")addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(token$$module$Applications$server$habit_tracker$node_modules$moment$moment,matchUnsigned$$module$Applications$server$habit_tracker$node_modules$moment$moment);
function parseMs$$module$Applications$server$habit_tracker$node_modules$moment$moment(input,array){array[MILLISECOND$$module$Applications$server$habit_tracker$node_modules$moment$moment]=toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(("0."+input)*1E3)}
for(token$$module$Applications$server$habit_tracker$node_modules$moment$moment="S";token$$module$Applications$server$habit_tracker$node_modules$moment$moment.length<=9;token$$module$Applications$server$habit_tracker$node_modules$moment$moment+="S")addParseToken$$module$Applications$server$habit_tracker$node_modules$moment$moment(token$$module$Applications$server$habit_tracker$node_modules$moment$moment,parseMs$$module$Applications$server$habit_tracker$node_modules$moment$moment);
var getSetMillisecond$$module$Applications$server$habit_tracker$node_modules$moment$moment=makeGetSet$$module$Applications$server$habit_tracker$node_modules$moment$moment("Milliseconds",false);addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("z",0,0,"zoneAbbr");addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("zz",0,0,"zoneName");
function getZoneAbbr$$module$Applications$server$habit_tracker$node_modules$moment$moment(){return this._isUTC?"UTC":""}function getZoneName$$module$Applications$server$habit_tracker$node_modules$moment$moment(){return this._isUTC?"Coordinated Universal Time":""}var proto$$module$Applications$server$habit_tracker$node_modules$moment$moment=Moment$$module$Applications$server$habit_tracker$node_modules$moment$moment.prototype;
proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.add=add$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.calendar=calendar$1$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.clone=clone$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.diff=diff$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.endOf=endOf$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.format=format$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.from=from$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.fromNow=fromNow$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.to=to$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.toNow=toNow$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.get=stringGet$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.invalidAt=invalidAt$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.isAfter=isAfter$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.isBefore=isBefore$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.isBetween=isBetween$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.isSame=isSame$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.isSameOrAfter=isSameOrAfter$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.isSameOrBefore=isSameOrBefore$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.isValid=isValid$2$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.lang=lang$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.locale=locale$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.localeData=localeData$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.max=prototypeMax$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.min=prototypeMin$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.parsingFlags=parsingFlags$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.set=stringSet$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.startOf=startOf$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.subtract=subtract$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.toArray=toArray$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.toObject=toObject$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.toDate=toDate$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.toISOString=toISOString$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.inspect=inspect$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.toJSON=toJSON$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.toString=toString$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.unix=unix$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.valueOf=valueOf$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.creationData=creationData$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.year=getSetYear$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.isLeapYear=getIsLeapYear$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.weekYear=getSetWeekYear$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.isoWeekYear=getSetISOWeekYear$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.quarter=proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.quarters=getSetQuarter$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.month=getSetMonth$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.daysInMonth=getDaysInMonth$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.week=proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.weeks=getSetWeek$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.isoWeek=proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.isoWeeks=getSetISOWeek$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.weeksInYear=getWeeksInYear$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.isoWeeksInYear=getISOWeeksInYear$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.date=getSetDayOfMonth$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.day=proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.days=getSetDayOfWeek$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.weekday=getSetLocaleDayOfWeek$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.isoWeekday=getSetISODayOfWeek$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.dayOfYear=getSetDayOfYear$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.hour=proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.hours=getSetHour$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.minute=proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.minutes=getSetMinute$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.second=proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.seconds=getSetSecond$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.millisecond=proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.milliseconds=getSetMillisecond$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.utcOffset=getSetOffset$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.utc=setOffsetToUTC$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.local=setOffsetToLocal$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.parseZone=setOffsetToParsedOffset$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.hasAlignedHourOffset=hasAlignedHourOffset$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.isDST=isDaylightSavingTime$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.isLocal=isLocal$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.isUtcOffset=isUtcOffset$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.isUtc=isUtc$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.isUTC=isUtc$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.zoneAbbr=getZoneAbbr$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.zoneName=getZoneName$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.dates=deprecate$$module$Applications$server$habit_tracker$node_modules$moment$moment("dates accessor is deprecated. Use date instead.",getSetDayOfMonth$$module$Applications$server$habit_tracker$node_modules$moment$moment);
proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.months=deprecate$$module$Applications$server$habit_tracker$node_modules$moment$moment("months accessor is deprecated. Use month instead",getSetMonth$$module$Applications$server$habit_tracker$node_modules$moment$moment);
proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.years=deprecate$$module$Applications$server$habit_tracker$node_modules$moment$moment("years accessor is deprecated. Use year instead",getSetYear$$module$Applications$server$habit_tracker$node_modules$moment$moment);
proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.zone=deprecate$$module$Applications$server$habit_tracker$node_modules$moment$moment("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",getSetZone$$module$Applications$server$habit_tracker$node_modules$moment$moment);
proto$$module$Applications$server$habit_tracker$node_modules$moment$moment.isDSTShifted=deprecate$$module$Applications$server$habit_tracker$node_modules$moment$moment("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",isDaylightSavingTimeShifted$$module$Applications$server$habit_tracker$node_modules$moment$moment);
function createUnix$$module$Applications$server$habit_tracker$node_modules$moment$moment(input){return createLocal$$module$Applications$server$habit_tracker$node_modules$moment$moment(input*1E3)}function createInZone$$module$Applications$server$habit_tracker$node_modules$moment$moment(){return createLocal$$module$Applications$server$habit_tracker$node_modules$moment$moment.apply(null,arguments).parseZone()}
function preParsePostFormat$$module$Applications$server$habit_tracker$node_modules$moment$moment(string){return string}var proto$1$$module$Applications$server$habit_tracker$node_modules$moment$moment=Locale$$module$Applications$server$habit_tracker$node_modules$moment$moment.prototype;proto$1$$module$Applications$server$habit_tracker$node_modules$moment$moment.calendar=calendar$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$1$$module$Applications$server$habit_tracker$node_modules$moment$moment.longDateFormat=longDateFormat$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$1$$module$Applications$server$habit_tracker$node_modules$moment$moment.invalidDate=invalidDate$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$1$$module$Applications$server$habit_tracker$node_modules$moment$moment.ordinal=ordinal$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$1$$module$Applications$server$habit_tracker$node_modules$moment$moment.preparse=preParsePostFormat$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$1$$module$Applications$server$habit_tracker$node_modules$moment$moment.postformat=preParsePostFormat$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$1$$module$Applications$server$habit_tracker$node_modules$moment$moment.relativeTime=relativeTime$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$1$$module$Applications$server$habit_tracker$node_modules$moment$moment.pastFuture=pastFuture$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$1$$module$Applications$server$habit_tracker$node_modules$moment$moment.set=set$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$1$$module$Applications$server$habit_tracker$node_modules$moment$moment.months=localeMonths$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$1$$module$Applications$server$habit_tracker$node_modules$moment$moment.monthsShort=localeMonthsShort$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$1$$module$Applications$server$habit_tracker$node_modules$moment$moment.monthsParse=localeMonthsParse$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$1$$module$Applications$server$habit_tracker$node_modules$moment$moment.monthsRegex=monthsRegex$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$1$$module$Applications$server$habit_tracker$node_modules$moment$moment.monthsShortRegex=monthsShortRegex$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$1$$module$Applications$server$habit_tracker$node_modules$moment$moment.week=localeWeek$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$1$$module$Applications$server$habit_tracker$node_modules$moment$moment.firstDayOfYear=localeFirstDayOfYear$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$1$$module$Applications$server$habit_tracker$node_modules$moment$moment.firstDayOfWeek=localeFirstDayOfWeek$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$1$$module$Applications$server$habit_tracker$node_modules$moment$moment.weekdays=localeWeekdays$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$1$$module$Applications$server$habit_tracker$node_modules$moment$moment.weekdaysMin=localeWeekdaysMin$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$1$$module$Applications$server$habit_tracker$node_modules$moment$moment.weekdaysShort=localeWeekdaysShort$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$1$$module$Applications$server$habit_tracker$node_modules$moment$moment.weekdaysParse=localeWeekdaysParse$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$1$$module$Applications$server$habit_tracker$node_modules$moment$moment.weekdaysRegex=weekdaysRegex$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$1$$module$Applications$server$habit_tracker$node_modules$moment$moment.weekdaysShortRegex=weekdaysShortRegex$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$1$$module$Applications$server$habit_tracker$node_modules$moment$moment.weekdaysMinRegex=weekdaysMinRegex$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$1$$module$Applications$server$habit_tracker$node_modules$moment$moment.isPM=localeIsPM$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$1$$module$Applications$server$habit_tracker$node_modules$moment$moment.meridiem=localeMeridiem$$module$Applications$server$habit_tracker$node_modules$moment$moment;
function get$1$$module$Applications$server$habit_tracker$node_modules$moment$moment(format,index,field,setter){var locale=getLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment();var utc=createUTC$$module$Applications$server$habit_tracker$node_modules$moment$moment().set(setter,index);return locale[field](utc,format)}
function listMonthsImpl$$module$Applications$server$habit_tracker$node_modules$moment$moment(format,index,field){if(isNumber$$module$Applications$server$habit_tracker$node_modules$moment$moment(format)){index=format;format=undefined}format=format||"";if(index!=null)return get$1$$module$Applications$server$habit_tracker$node_modules$moment$moment(format,index,field,"month");var i;var out=[];for(i=0;i<12;i++)out[i]=get$1$$module$Applications$server$habit_tracker$node_modules$moment$moment(format,i,
field,"month");return out}
function listWeekdaysImpl$$module$Applications$server$habit_tracker$node_modules$moment$moment(localeSorted,format,index,field){if(typeof localeSorted==="boolean"){if(isNumber$$module$Applications$server$habit_tracker$node_modules$moment$moment(format)){index=format;format=undefined}format=format||""}else{format=localeSorted;index=format;localeSorted=false;if(isNumber$$module$Applications$server$habit_tracker$node_modules$moment$moment(format)){index=format;format=undefined}format=format||""}var locale=
getLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment();var shift=localeSorted?locale._week.dow:0;if(index!=null)return get$1$$module$Applications$server$habit_tracker$node_modules$moment$moment(format,(index+shift)%7,field,"day");var i;var out=[];for(i=0;i<7;i++)out[i]=get$1$$module$Applications$server$habit_tracker$node_modules$moment$moment(format,(i+shift)%7,field,"day");return out}
function listMonths$$module$Applications$server$habit_tracker$node_modules$moment$moment(format,index){return listMonthsImpl$$module$Applications$server$habit_tracker$node_modules$moment$moment(format,index,"months")}function listMonthsShort$$module$Applications$server$habit_tracker$node_modules$moment$moment(format,index){return listMonthsImpl$$module$Applications$server$habit_tracker$node_modules$moment$moment(format,index,"monthsShort")}
function listWeekdays$$module$Applications$server$habit_tracker$node_modules$moment$moment(localeSorted,format,index){return listWeekdaysImpl$$module$Applications$server$habit_tracker$node_modules$moment$moment(localeSorted,format,index,"weekdays")}
function listWeekdaysShort$$module$Applications$server$habit_tracker$node_modules$moment$moment(localeSorted,format,index){return listWeekdaysImpl$$module$Applications$server$habit_tracker$node_modules$moment$moment(localeSorted,format,index,"weekdaysShort")}
function listWeekdaysMin$$module$Applications$server$habit_tracker$node_modules$moment$moment(localeSorted,format,index){return listWeekdaysImpl$$module$Applications$server$habit_tracker$node_modules$moment$moment(localeSorted,format,index,"weekdaysMin")}
getSetGlobalLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment("en",{dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(number){var b=number%10;var output=toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(number%100/10)===1?"th":b===1?"st":b===2?"nd":b===3?"rd":"th";return number+output}});
hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.lang=deprecate$$module$Applications$server$habit_tracker$node_modules$moment$moment("moment.lang is deprecated. Use moment.locale instead.",getSetGlobalLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment);
hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.langData=deprecate$$module$Applications$server$habit_tracker$node_modules$moment$moment("moment.langData is deprecated. Use moment.localeData instead.",getLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment);var mathAbs$$module$Applications$server$habit_tracker$node_modules$moment$moment=Math.abs;
function abs$$module$Applications$server$habit_tracker$node_modules$moment$moment(){var data=this._data;this._milliseconds=mathAbs$$module$Applications$server$habit_tracker$node_modules$moment$moment(this._milliseconds);this._days=mathAbs$$module$Applications$server$habit_tracker$node_modules$moment$moment(this._days);this._months=mathAbs$$module$Applications$server$habit_tracker$node_modules$moment$moment(this._months);data.milliseconds=mathAbs$$module$Applications$server$habit_tracker$node_modules$moment$moment(data.milliseconds);
data.seconds=mathAbs$$module$Applications$server$habit_tracker$node_modules$moment$moment(data.seconds);data.minutes=mathAbs$$module$Applications$server$habit_tracker$node_modules$moment$moment(data.minutes);data.hours=mathAbs$$module$Applications$server$habit_tracker$node_modules$moment$moment(data.hours);data.months=mathAbs$$module$Applications$server$habit_tracker$node_modules$moment$moment(data.months);data.years=mathAbs$$module$Applications$server$habit_tracker$node_modules$moment$moment(data.years);
return this}function addSubtract$1$$module$Applications$server$habit_tracker$node_modules$moment$moment(duration,input,value,direction){var other=createDuration$$module$Applications$server$habit_tracker$node_modules$moment$moment(input,value);duration._milliseconds+=direction*other._milliseconds;duration._days+=direction*other._days;duration._months+=direction*other._months;return duration._bubble()}
function add$1$$module$Applications$server$habit_tracker$node_modules$moment$moment(input,value){return addSubtract$1$$module$Applications$server$habit_tracker$node_modules$moment$moment(this,input,value,1)}function subtract$1$$module$Applications$server$habit_tracker$node_modules$moment$moment(input,value){return addSubtract$1$$module$Applications$server$habit_tracker$node_modules$moment$moment(this,input,value,-1)}
function absCeil$$module$Applications$server$habit_tracker$node_modules$moment$moment(number){if(number<0)return Math.floor(number);else return Math.ceil(number)}
function bubble$$module$Applications$server$habit_tracker$node_modules$moment$moment(){var milliseconds=this._milliseconds;var days=this._days;var months=this._months;var data=this._data;var seconds;var minutes;var hours;var years;var monthsFromDays;if(!(milliseconds>=0&&days>=0&&months>=0||milliseconds<=0&&days<=0&&months<=0)){milliseconds+=absCeil$$module$Applications$server$habit_tracker$node_modules$moment$moment(monthsToDays$$module$Applications$server$habit_tracker$node_modules$moment$moment(months)+
days)*864E5;days=0;months=0}data.milliseconds=milliseconds%1E3;seconds=absFloor$$module$Applications$server$habit_tracker$node_modules$moment$moment(milliseconds/1E3);data.seconds=seconds%60;minutes=absFloor$$module$Applications$server$habit_tracker$node_modules$moment$moment(seconds/60);data.minutes=minutes%60;hours=absFloor$$module$Applications$server$habit_tracker$node_modules$moment$moment(minutes/60);data.hours=hours%24;days+=absFloor$$module$Applications$server$habit_tracker$node_modules$moment$moment(hours/
24);monthsFromDays=absFloor$$module$Applications$server$habit_tracker$node_modules$moment$moment(daysToMonths$$module$Applications$server$habit_tracker$node_modules$moment$moment(days));months+=monthsFromDays;days-=absCeil$$module$Applications$server$habit_tracker$node_modules$moment$moment(monthsToDays$$module$Applications$server$habit_tracker$node_modules$moment$moment(monthsFromDays));years=absFloor$$module$Applications$server$habit_tracker$node_modules$moment$moment(months/12);months%=12;data.days=
days;data.months=months;data.years=years;return this}function daysToMonths$$module$Applications$server$habit_tracker$node_modules$moment$moment(days){return days*4800/146097}function monthsToDays$$module$Applications$server$habit_tracker$node_modules$moment$moment(months){return months*146097/4800}
function as$$module$Applications$server$habit_tracker$node_modules$moment$moment(units){if(!this.isValid())return NaN;var days;var months;var milliseconds=this._milliseconds;units=normalizeUnits$$module$Applications$server$habit_tracker$node_modules$moment$moment(units);if(units==="month"||units==="year"){days=this._days+milliseconds/864E5;months=this._months+daysToMonths$$module$Applications$server$habit_tracker$node_modules$moment$moment(days);return units==="month"?months:months/12}else{days=this._days+
Math.round(monthsToDays$$module$Applications$server$habit_tracker$node_modules$moment$moment(this._months));switch(units){case "week":return days/7+milliseconds/6048E5;case "day":return days+milliseconds/864E5;case "hour":return days*24+milliseconds/36E5;case "minute":return days*1440+milliseconds/6E4;case "second":return days*86400+milliseconds/1E3;case "millisecond":return Math.floor(days*864E5)+milliseconds;default:throw new Error("Unknown unit "+units);}}}
function valueOf$1$$module$Applications$server$habit_tracker$node_modules$moment$moment(){if(!this.isValid())return NaN;return this._milliseconds+this._days*864E5+this._months%12*2592E6+toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(this._months/12)*31536E6}function makeAs$$module$Applications$server$habit_tracker$node_modules$moment$moment(alias){return function(){return this.as(alias)}}
var asMilliseconds$$module$Applications$server$habit_tracker$node_modules$moment$moment=makeAs$$module$Applications$server$habit_tracker$node_modules$moment$moment("ms");var asSeconds$$module$Applications$server$habit_tracker$node_modules$moment$moment=makeAs$$module$Applications$server$habit_tracker$node_modules$moment$moment("s");var asMinutes$$module$Applications$server$habit_tracker$node_modules$moment$moment=makeAs$$module$Applications$server$habit_tracker$node_modules$moment$moment("m");
var asHours$$module$Applications$server$habit_tracker$node_modules$moment$moment=makeAs$$module$Applications$server$habit_tracker$node_modules$moment$moment("h");var asDays$$module$Applications$server$habit_tracker$node_modules$moment$moment=makeAs$$module$Applications$server$habit_tracker$node_modules$moment$moment("d");var asWeeks$$module$Applications$server$habit_tracker$node_modules$moment$moment=makeAs$$module$Applications$server$habit_tracker$node_modules$moment$moment("w");
var asMonths$$module$Applications$server$habit_tracker$node_modules$moment$moment=makeAs$$module$Applications$server$habit_tracker$node_modules$moment$moment("M");var asYears$$module$Applications$server$habit_tracker$node_modules$moment$moment=makeAs$$module$Applications$server$habit_tracker$node_modules$moment$moment("y");
function clone$1$$module$Applications$server$habit_tracker$node_modules$moment$moment(){return createDuration$$module$Applications$server$habit_tracker$node_modules$moment$moment(this)}function get$2$$module$Applications$server$habit_tracker$node_modules$moment$moment(units){units=normalizeUnits$$module$Applications$server$habit_tracker$node_modules$moment$moment(units);return this.isValid()?this[units+"s"]():NaN}
function makeGetter$$module$Applications$server$habit_tracker$node_modules$moment$moment(name){return function(){return this.isValid()?this._data[name]:NaN}}var milliseconds$$module$Applications$server$habit_tracker$node_modules$moment$moment=makeGetter$$module$Applications$server$habit_tracker$node_modules$moment$moment("milliseconds");var seconds$$module$Applications$server$habit_tracker$node_modules$moment$moment=makeGetter$$module$Applications$server$habit_tracker$node_modules$moment$moment("seconds");
var minutes$$module$Applications$server$habit_tracker$node_modules$moment$moment=makeGetter$$module$Applications$server$habit_tracker$node_modules$moment$moment("minutes");var hours$$module$Applications$server$habit_tracker$node_modules$moment$moment=makeGetter$$module$Applications$server$habit_tracker$node_modules$moment$moment("hours");var days$$module$Applications$server$habit_tracker$node_modules$moment$moment=makeGetter$$module$Applications$server$habit_tracker$node_modules$moment$moment("days");
var months$$module$Applications$server$habit_tracker$node_modules$moment$moment=makeGetter$$module$Applications$server$habit_tracker$node_modules$moment$moment("months");var years$$module$Applications$server$habit_tracker$node_modules$moment$moment=makeGetter$$module$Applications$server$habit_tracker$node_modules$moment$moment("years");
function weeks$$module$Applications$server$habit_tracker$node_modules$moment$moment(){return absFloor$$module$Applications$server$habit_tracker$node_modules$moment$moment(this.days()/7)}var round$$module$Applications$server$habit_tracker$node_modules$moment$moment=Math.round;var thresholds$$module$Applications$server$habit_tracker$node_modules$moment$moment={ss:44,s:45,m:45,h:22,d:26,M:11};
function substituteTimeAgo$$module$Applications$server$habit_tracker$node_modules$moment$moment(string,number,withoutSuffix,isFuture,locale){return locale.relativeTime(number||1,!!withoutSuffix,string,isFuture)}
function relativeTime$1$$module$Applications$server$habit_tracker$node_modules$moment$moment(posNegDuration,withoutSuffix,locale){var duration=createDuration$$module$Applications$server$habit_tracker$node_modules$moment$moment(posNegDuration).abs();var seconds=round$$module$Applications$server$habit_tracker$node_modules$moment$moment(duration.as("s"));var minutes=round$$module$Applications$server$habit_tracker$node_modules$moment$moment(duration.as("m"));var hours=round$$module$Applications$server$habit_tracker$node_modules$moment$moment(duration.as("h"));
var days=round$$module$Applications$server$habit_tracker$node_modules$moment$moment(duration.as("d"));var months=round$$module$Applications$server$habit_tracker$node_modules$moment$moment(duration.as("M"));var years=round$$module$Applications$server$habit_tracker$node_modules$moment$moment(duration.as("y"));var a=seconds<=thresholds$$module$Applications$server$habit_tracker$node_modules$moment$moment.ss&&["s",seconds]||seconds<thresholds$$module$Applications$server$habit_tracker$node_modules$moment$moment.s&&
["ss",seconds]||minutes<=1&&["m"]||minutes<thresholds$$module$Applications$server$habit_tracker$node_modules$moment$moment.m&&["mm",minutes]||hours<=1&&["h"]||hours<thresholds$$module$Applications$server$habit_tracker$node_modules$moment$moment.h&&["hh",hours]||days<=1&&["d"]||days<thresholds$$module$Applications$server$habit_tracker$node_modules$moment$moment.d&&["dd",days]||months<=1&&["M"]||months<thresholds$$module$Applications$server$habit_tracker$node_modules$moment$moment.M&&["MM",months]||
years<=1&&["y"]||["yy",years];a[2]=withoutSuffix;a[3]=+posNegDuration>0;a[4]=locale;return substituteTimeAgo$$module$Applications$server$habit_tracker$node_modules$moment$moment.apply(null,a)}
function getSetRelativeTimeRounding$$module$Applications$server$habit_tracker$node_modules$moment$moment(roundingFunction){if(roundingFunction===undefined)return round$$module$Applications$server$habit_tracker$node_modules$moment$moment;if(typeof roundingFunction==="function"){round$$module$Applications$server$habit_tracker$node_modules$moment$moment=roundingFunction;return true}return false}
function getSetRelativeTimeThreshold$$module$Applications$server$habit_tracker$node_modules$moment$moment(threshold,limit){if(thresholds$$module$Applications$server$habit_tracker$node_modules$moment$moment[threshold]===undefined)return false;if(limit===undefined)return thresholds$$module$Applications$server$habit_tracker$node_modules$moment$moment[threshold];thresholds$$module$Applications$server$habit_tracker$node_modules$moment$moment[threshold]=limit;if(threshold==="s")thresholds$$module$Applications$server$habit_tracker$node_modules$moment$moment.ss=
limit-1;return true}function humanize$$module$Applications$server$habit_tracker$node_modules$moment$moment(withSuffix){if(!this.isValid())return this.localeData().invalidDate();var locale=this.localeData();var output=relativeTime$1$$module$Applications$server$habit_tracker$node_modules$moment$moment(this,!withSuffix,locale);if(withSuffix)output=locale.pastFuture(+this,output);return locale.postformat(output)}var abs$1$$module$Applications$server$habit_tracker$node_modules$moment$moment=Math.abs;
function sign$$module$Applications$server$habit_tracker$node_modules$moment$moment(x){return(x>0)-(x<0)||+x}
function toISOString$1$$module$Applications$server$habit_tracker$node_modules$moment$moment(){if(!this.isValid())return this.localeData().invalidDate();var seconds=abs$1$$module$Applications$server$habit_tracker$node_modules$moment$moment(this._milliseconds)/1E3;var days=abs$1$$module$Applications$server$habit_tracker$node_modules$moment$moment(this._days);var months=abs$1$$module$Applications$server$habit_tracker$node_modules$moment$moment(this._months);var minutes;var hours;var years;minutes=absFloor$$module$Applications$server$habit_tracker$node_modules$moment$moment(seconds/
60);hours=absFloor$$module$Applications$server$habit_tracker$node_modules$moment$moment(minutes/60);seconds%=60;minutes%=60;years=absFloor$$module$Applications$server$habit_tracker$node_modules$moment$moment(months/12);months%=12;var Y=years;var M=months;var D=days;var h=hours;var m=minutes;var s=seconds?seconds.toFixed(3).replace(/\.?0+$/,""):"";var total=this.asSeconds();if(!total)return"P0D";var totalSign=total<0?"-":"";var ymSign=sign$$module$Applications$server$habit_tracker$node_modules$moment$moment(this._months)!==
sign$$module$Applications$server$habit_tracker$node_modules$moment$moment(total)?"-":"";var daysSign=sign$$module$Applications$server$habit_tracker$node_modules$moment$moment(this._days)!==sign$$module$Applications$server$habit_tracker$node_modules$moment$moment(total)?"-":"";var hmsSign=sign$$module$Applications$server$habit_tracker$node_modules$moment$moment(this._milliseconds)!==sign$$module$Applications$server$habit_tracker$node_modules$moment$moment(total)?"-":"";return totalSign+"P"+(Y?ymSign+
Y+"Y":"")+(M?ymSign+M+"M":"")+(D?daysSign+D+"D":"")+(h||m||s?"T":"")+(h?hmsSign+h+"H":"")+(m?hmsSign+m+"M":"")+(s?hmsSign+s+"S":"")}var proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment=Duration$$module$Applications$server$habit_tracker$node_modules$moment$moment.prototype;proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment.isValid=isValid$1$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment.abs=abs$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment.add=add$1$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment.subtract=subtract$1$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment.as=as$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment.asMilliseconds=asMilliseconds$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment.asSeconds=asSeconds$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment.asMinutes=asMinutes$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment.asHours=asHours$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment.asDays=asDays$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment.asWeeks=asWeeks$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment.asMonths=asMonths$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment.asYears=asYears$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment.valueOf=valueOf$1$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment._bubble=bubble$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment.clone=clone$1$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment.get=get$2$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment.milliseconds=milliseconds$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment.seconds=seconds$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment.minutes=minutes$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment.hours=hours$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment.days=days$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment.weeks=weeks$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment.months=months$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment.years=years$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment.humanize=humanize$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment.toISOString=toISOString$1$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment.toString=toISOString$1$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment.toJSON=toISOString$1$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment.locale=locale$$module$Applications$server$habit_tracker$node_modules$moment$moment;proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment.localeData=localeData$$module$Applications$server$habit_tracker$node_modules$moment$moment;
proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment.toIsoString=deprecate$$module$Applications$server$habit_tracker$node_modules$moment$moment("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",toISOString$1$$module$Applications$server$habit_tracker$node_modules$moment$moment);proto$2$$module$Applications$server$habit_tracker$node_modules$moment$moment.lang=lang$$module$Applications$server$habit_tracker$node_modules$moment$moment;
addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("X",0,0,"unix");addFormatToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("x",0,0,"valueOf");addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("x",matchSigned$$module$Applications$server$habit_tracker$node_modules$moment$moment);addRegexToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("X",matchTimestamp$$module$Applications$server$habit_tracker$node_modules$moment$moment);
addParseToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("X",function(input,array,config){config._d=new Date(parseFloat(input,10)*1E3)});addParseToken$$module$Applications$server$habit_tracker$node_modules$moment$moment("x",function(input,array,config){config._d=new Date(toInt$$module$Applications$server$habit_tracker$node_modules$moment$moment(input))});hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.version="2.22.2";setHookCallback$$module$Applications$server$habit_tracker$node_modules$moment$moment(createLocal$$module$Applications$server$habit_tracker$node_modules$moment$moment);
hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.fn=proto$$module$Applications$server$habit_tracker$node_modules$moment$moment;hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.min=min$$module$Applications$server$habit_tracker$node_modules$moment$moment;hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.max=max$$module$Applications$server$habit_tracker$node_modules$moment$moment;
hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.now=now$$module$Applications$server$habit_tracker$node_modules$moment$moment;hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.utc=createUTC$$module$Applications$server$habit_tracker$node_modules$moment$moment;hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.unix=createUnix$$module$Applications$server$habit_tracker$node_modules$moment$moment;
hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.months=listMonths$$module$Applications$server$habit_tracker$node_modules$moment$moment;hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.isDate=isDate$$module$Applications$server$habit_tracker$node_modules$moment$moment;hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.locale=getSetGlobalLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment;
hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.invalid=createInvalid$$module$Applications$server$habit_tracker$node_modules$moment$moment;hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.duration=createDuration$$module$Applications$server$habit_tracker$node_modules$moment$moment;hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.isMoment=isMoment$$module$Applications$server$habit_tracker$node_modules$moment$moment;
hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.weekdays=listWeekdays$$module$Applications$server$habit_tracker$node_modules$moment$moment;hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.parseZone=createInZone$$module$Applications$server$habit_tracker$node_modules$moment$moment;hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.localeData=getLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment;
hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.isDuration=isDuration$$module$Applications$server$habit_tracker$node_modules$moment$moment;hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.monthsShort=listMonthsShort$$module$Applications$server$habit_tracker$node_modules$moment$moment;hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.weekdaysMin=listWeekdaysMin$$module$Applications$server$habit_tracker$node_modules$moment$moment;
hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.defineLocale=defineLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment;hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.updateLocale=updateLocale$$module$Applications$server$habit_tracker$node_modules$moment$moment;hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.locales=listLocales$$module$Applications$server$habit_tracker$node_modules$moment$moment;
hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.weekdaysShort=listWeekdaysShort$$module$Applications$server$habit_tracker$node_modules$moment$moment;hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.normalizeUnits=normalizeUnits$$module$Applications$server$habit_tracker$node_modules$moment$moment;hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.relativeTimeRounding=getSetRelativeTimeRounding$$module$Applications$server$habit_tracker$node_modules$moment$moment;
hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.relativeTimeThreshold=getSetRelativeTimeThreshold$$module$Applications$server$habit_tracker$node_modules$moment$moment;hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.calendarFormat=getCalendarFormat$$module$Applications$server$habit_tracker$node_modules$moment$moment;hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.prototype=proto$$module$Applications$server$habit_tracker$node_modules$moment$moment;
hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment.HTML5_FMT={DATETIME_LOCAL:"YYYY-MM-DDTHH:mm",DATETIME_LOCAL_SECONDS:"YYYY-MM-DDTHH:mm:ss",DATETIME_LOCAL_MS:"YYYY-MM-DDTHH:mm:ss.SSS",DATE:"YYYY-MM-DD",TIME:"HH:mm",TIME_SECONDS:"HH:mm:ss",TIME_MS:"HH:mm:ss.SSS",WEEK:"YYYY-[W]WW",MONTH:"YYYY-MM"};module$Applications$server$habit_tracker$node_modules$moment$moment["default"]=hooks$$module$Applications$server$habit_tracker$node_modules$moment$moment